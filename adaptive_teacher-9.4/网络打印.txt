GenMUXNet(
  (conv_stem): Conv2d(3, 24, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
  (bn1): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (blocks): Sequential(
    (0): Sequential(
      (0): DepthwiseSeparableConv(
        (conv_dw): Conv2d(24, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=24, bias=False)
        (bn1): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (se): SqueezeExcite(
          (conv_reduce): Conv2d(24, 6, kernel_size=(1, 1), stride=(1, 1))
          (conv_expand): Conv2d(6, 24, kernel_size=(1, 1), stride=(1, 1))
        )
        (conv_pw): Conv2d(24, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn2): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): Sequential(
      (0): InvertedResidual(
        (conv_pw): Conv2d(24, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv_dw): Conv2d(96, 96, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=96, bias=False)
        (bn2): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (se): SqueezeExcite(
          (conv_reduce): Conv2d(96, 18, kernel_size=(1, 1), stride=(1, 1))
          (conv_expand): Conv2d(18, 96, kernel_size=(1, 1), stride=(1, 1))
        )
        (conv_pwl): Conv2d(96, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (2): Sequential(
      (0): MuxInvertedResidual(
        (split): SplitBlock(ratio=0.50)
        (conv_pw): Conv2d(12, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv_dw): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=24, bias=False)
        (bn2): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (se): SqueezeExcite(
          (conv_reduce): Conv2d(48, 9, kernel_size=(1, 1), stride=(1, 1))
          (conv_expand): Conv2d(9, 48, kernel_size=(1, 1), stride=(1, 1))
        )
        (conv_pwl): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (shuffle): ChannelShuffle(groups=2)
      )
    )
    (3): Sequential(
      (0): MuxInvertedResidual(
        (split): SplitBlock(ratio=0.50)
        (conv_pw): Conv2d(12, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv_dw): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=24, bias=False)
        (bn2): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (se): SqueezeExcite(
          (conv_reduce): Conv2d(48, 9, kernel_size=(1, 1), stride=(1, 1))
          (conv_expand): Conv2d(9, 48, kernel_size=(1, 1), stride=(1, 1))
        )
        (conv_pwl): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (shuffle): ChannelShuffle(groups=2)
      )
    )
    (4): Sequential(
      (0): InvertedResidual(
        (conv_pw): Conv2d(24, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv_dw): MixedConv2d(
          (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False)
          (1): Conv2d(32, 32, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=32, bias=False)
          (2): Conv2d(32, 32, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), groups=32, bias=False)
        )
        (bn2): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (se): SqueezeExcite(
          (conv_reduce): Conv2d(96, 18, kernel_size=(1, 1), stride=(1, 1))
          (conv_expand): Conv2d(18, 96, kernel_size=(1, 1), stride=(1, 1))
        )
        (conv_pwl): Conv2d(96, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (5): Sequential(
      (0): MuxInvertedResidual(
        (split): SplitBlock(ratio=0.50)
        (conv_pw): Conv2d(20, 120, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv_dw): Conv2d(120, 120, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=60, bias=False)
        (bn2): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (se): SqueezeExcite(
          (conv_reduce): Conv2d(120, 15, kernel_size=(1, 1), stride=(1, 1))
          (conv_expand): Conv2d(15, 120, kernel_size=(1, 1), stride=(1, 1))
        )
        (conv_pwl): Conv2d(120, 20, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(20, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (shuffle): ChannelShuffle(groups=2)
      )
    )
    (6): Sequential(
      (0): MuxInvertedResidual(
        (split): SplitBlock(ratio=0.50)
        (conv_pw): Conv2d(20, 120, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv_dw): Conv2d(120, 120, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=60, bias=False)
        (bn2): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (se): SqueezeExcite(
          (conv_reduce): Conv2d(120, 15, kernel_size=(1, 1), stride=(1, 1))
          (conv_expand): Conv2d(15, 120, kernel_size=(1, 1), stride=(1, 1))
        )
        (conv_pwl): Conv2d(120, 20, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(20, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (shuffle): ChannelShuffle(groups=2)
      )
    )
    (7): Sequential(
      (0): InvertedResidual(
        (conv_pw): Conv2d(40, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv_dw): MixedConv2d(
          (0): Conv2d(40, 40, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=40, bias=False)
          (1): Conv2d(40, 40, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=40, bias=False)
          (2): Conv2d(40, 40, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), groups=40, bias=False)
          (3): Conv2d(40, 40, kernel_size=(9, 9), stride=(2, 2), padding=(4, 4), groups=40, bias=False)
        )
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (se): SqueezeExcite(
          (conv_reduce): Conv2d(160, 30, kernel_size=(1, 1), stride=(1, 1))
          (conv_expand): Conv2d(30, 160, kernel_size=(1, 1), stride=(1, 1))
        )
        (conv_pwl): Conv2d(160, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (8): Sequential(
      (0): MuxInvertedResidual(
        (split): SplitBlock(ratio=0.50)
        (conv_pw): Conv2d(40, 240, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv_dw): Conv2d(240, 240, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=120, bias=False)
        (bn2): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (se): SqueezeExcite(
          (conv_reduce): Conv2d(240, 30, kernel_size=(1, 1), stride=(1, 1))
          (conv_expand): Conv2d(30, 240, kernel_size=(1, 1), stride=(1, 1))
        )
        (conv_pwl): Conv2d(240, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (shuffle): ChannelShuffle(groups=2)
      )
    )
    (9): Sequential(
      (0): MuxInvertedResidual(
        (split): SplitBlock(ratio=0.50)
        (conv_pw): Conv2d(40, 240, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv_dw): Conv2d(240, 240, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=120, bias=False)
        (bn2): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (se): SqueezeExcite(
          (conv_reduce): Conv2d(240, 30, kernel_size=(1, 1), stride=(1, 1))
          (conv_expand): Conv2d(30, 240, kernel_size=(1, 1), stride=(1, 1))
        )
        (conv_pwl): Conv2d(240, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (shuffle): ChannelShuffle(groups=2)
      )
    )
    (10): Sequential(
      (0): InvertedResidual(
        (conv_pw): Conv2d(80, 480, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv_dw): Conv2d(480, 480, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=480, bias=False)
        (bn2): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (se): SqueezeExcite(
          (conv_reduce): Conv2d(480, 60, kernel_size=(1, 1), stride=(1, 1))
          (conv_expand): Conv2d(60, 480, kernel_size=(1, 1), stride=(1, 1))
        )
        (conv_pwl): Conv2d(480, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (11): Sequential(
      (0): MuxInvertedResidual(
        (split): SplitBlock(ratio=0.50)
        (conv_pw): Conv2d(56, 336, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(336, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv_dw): Conv2d(336, 336, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=168, bias=False)
        (bn2): BatchNorm2d(336, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (se): SqueezeExcite(
          (conv_reduce): Conv2d(336, 42, kernel_size=(1, 1), stride=(1, 1))
          (conv_expand): Conv2d(42, 336, kernel_size=(1, 1), stride=(1, 1))
        )
        (conv_pwl): Conv2d(336, 56, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(56, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (shuffle): ChannelShuffle(groups=2)
      )
    )
    (12): Sequential(
      (0): MuxInvertedResidual(
        (split): SplitBlock(ratio=0.50)
        (conv_pw): Conv2d(56, 336, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(336, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv_dw): Conv2d(336, 336, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=168, bias=False)
        (bn2): BatchNorm2d(336, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (se): SqueezeExcite(
          (conv_reduce): Conv2d(336, 42, kernel_size=(1, 1), stride=(1, 1))
          (conv_expand): Conv2d(42, 336, kernel_size=(1, 1), stride=(1, 1))
        )
        (conv_pwl): Conv2d(336, 56, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(56, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (shuffle): ChannelShuffle(groups=2)
      )
    )
    (13): Sequential(
      (0): InvertedResidual(
        (conv_pw): Conv2d(112, 448, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv_dw): MixedConv2d(
          (0): Conv2d(92, 92, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=92, bias=False)
          (1): Conv2d(89, 89, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=89, bias=False)
          (2): Conv2d(89, 89, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), groups=89, bias=False)
          (3): Conv2d(89, 89, kernel_size=(9, 9), stride=(2, 2), padding=(4, 4), groups=89, bias=False)
          (4): Conv2d(89, 89, kernel_size=(11, 11), stride=(2, 2), padding=(5, 5), groups=89, bias=False)
        )
        (bn2): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (se): SqueezeExcite(
          (conv_reduce): Conv2d(448, 84, kernel_size=(1, 1), stride=(1, 1))
          (conv_expand): Conv2d(84, 448, kernel_size=(1, 1), stride=(1, 1))
        )
        (conv_pwl): Conv2d(448, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (14): Sequential(
      (0): MuxInvertedResidual(
        (split): SplitBlock(ratio=0.50)
        (conv_pw): Conv2d(80, 480, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv_dw): Conv2d(480, 480, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=240, bias=False)
        (bn2): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (se): SqueezeExcite(
          (conv_reduce): Conv2d(480, 60, kernel_size=(1, 1), stride=(1, 1))
          (conv_expand): Conv2d(60, 480, kernel_size=(1, 1), stride=(1, 1))
        )
        (conv_pwl): Conv2d(480, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (shuffle): ChannelShuffle(groups=2)
      )
    )
    (15): Sequential(
      (0): MuxInvertedResidual(
        (split): SplitBlock(ratio=0.50)
        (conv_pw): Conv2d(80, 480, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv_dw): Conv2d(480, 480, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=240, bias=False)
        (bn2): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (se): SqueezeExcite(
          (conv_reduce): Conv2d(480, 60, kernel_size=(1, 1), stride=(1, 1))
          (conv_expand): Conv2d(60, 480, kernel_size=(1, 1), stride=(1, 1))
        )
        (conv_pwl): Conv2d(480, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (shuffle): ChannelShuffle(groups=2)
      )
    )
    (16): Sequential(
      (0): MuxInvertedResidual(
        (split): SplitBlock(ratio=0.50)
        (conv_pw): Conv2d(80, 480, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv_dw): Conv2d(480, 480, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=240, bias=False)
        (bn2): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (se): SqueezeExcite(
          (conv_reduce): Conv2d(480, 60, kernel_size=(1, 1), stride=(1, 1))
          (conv_expand): Conv2d(60, 480, kernel_size=(1, 1), stride=(1, 1))
        )
        (conv_pwl): Conv2d(480, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (shuffle): ChannelShuffle(groups=2)
      )
    )
    (17): Sequential(
      (0): InvertedResidual(
        (conv_pw): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv_dw): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
        (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (se): SqueezeExcite(
          (conv_reduce): Conv2d(960, 120, kernel_size=(1, 1), stride=(1, 1))
          (conv_expand): Conv2d(120, 960, kernel_size=(1, 1), stride=(1, 1))
        )
        (conv_pwl): Conv2d(960, 200, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(200, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (conv_head): Conv2d(200, 1280, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn2): BatchNorm2d(1280, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (global_pool): SelectAdaptivePool2d (pool_type=avg, flatten=False)
  (classifier): Linear(in_features=1280, out_features=10, bias=True)
)