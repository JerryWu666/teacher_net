teacher_net
----------------------------------------------------------------
        Layer (type)               Output Shape         Param #
================================================================
            Conv2d-1           [-1, 24, 16, 16]             648
       BatchNorm2d-2           [-1, 24, 16, 16]              48
            Conv2d-3           [-1, 24, 16, 16]             216
       BatchNorm2d-4           [-1, 24, 16, 16]              48
            Conv2d-5              [-1, 6, 1, 1]             150
            Conv2d-6             [-1, 24, 1, 1]             168
     SqueezeExcite-7           [-1, 24, 16, 16]               0
            Conv2d-8           [-1, 24, 16, 16]             576
       BatchNorm2d-9           [-1, 24, 16, 16]              48
DepthwiseSeparableConv-10           [-1, 24, 16, 16]               0
           Conv2d-11           [-1, 96, 16, 16]           2,304
      BatchNorm2d-12           [-1, 96, 16, 16]             192
           Conv2d-13             [-1, 96, 8, 8]             864
      BatchNorm2d-14             [-1, 96, 8, 8]             192
           Conv2d-15             [-1, 18, 1, 1]           1,746
           Conv2d-16             [-1, 96, 1, 1]           1,824
    SqueezeExcite-17             [-1, 96, 8, 8]               0
           Conv2d-18             [-1, 24, 8, 8]           2,304
      BatchNorm2d-19             [-1, 24, 8, 8]              48
 InvertedResidual-20             [-1, 24, 8, 8]               0
       SplitBlock-21  [[-1, 12, 8, 8], [-1, 12, 8, 8]]               0
           Conv2d-22             [-1, 48, 8, 8]             576
      BatchNorm2d-23             [-1, 48, 8, 8]              96
           Conv2d-24             [-1, 48, 8, 8]             864
      BatchNorm2d-25             [-1, 48, 8, 8]              96
           Conv2d-26              [-1, 9, 1, 1]             441
           Conv2d-27             [-1, 48, 1, 1]             480
    SqueezeExcite-28             [-1, 48, 8, 8]               0
           Conv2d-29             [-1, 12, 8, 8]             576
      BatchNorm2d-30             [-1, 12, 8, 8]              24
   ChannelShuffle-31             [-1, 24, 8, 8]               0
MuxInvertedResidual-32             [-1, 24, 8, 8]               0
       SplitBlock-33  [[-1, 12, 8, 8], [-1, 12, 8, 8]]               0
           Conv2d-34             [-1, 48, 8, 8]             576
      BatchNorm2d-35             [-1, 48, 8, 8]              96
           Conv2d-36             [-1, 48, 8, 8]             864
      BatchNorm2d-37             [-1, 48, 8, 8]              96
           Conv2d-38              [-1, 9, 1, 1]             441
           Conv2d-39             [-1, 48, 1, 1]             480
    SqueezeExcite-40             [-1, 48, 8, 8]               0
           Conv2d-41             [-1, 12, 8, 8]             576
      BatchNorm2d-42             [-1, 12, 8, 8]              24
   ChannelShuffle-43             [-1, 24, 8, 8]               0
MuxInvertedResidual-44             [-1, 24, 8, 8]               0
           Conv2d-45             [-1, 96, 8, 8]           2,304
      BatchNorm2d-46             [-1, 96, 8, 8]             192
           Conv2d-47             [-1, 32, 4, 4]             288
           Conv2d-48             [-1, 32, 4, 4]             800
           Conv2d-49             [-1, 32, 4, 4]           1,568
      MixedConv2d-50             [-1, 96, 4, 4]               0
      BatchNorm2d-51             [-1, 96, 4, 4]             192
           Conv2d-52             [-1, 18, 1, 1]           1,746
           Conv2d-53             [-1, 96, 1, 1]           1,824
    SqueezeExcite-54             [-1, 96, 4, 4]               0
           Conv2d-55             [-1, 40, 4, 4]           3,840
      BatchNorm2d-56             [-1, 40, 4, 4]              80
 InvertedResidual-57             [-1, 40, 4, 4]               0
       SplitBlock-58  [[-1, 20, 4, 4], [-1, 20, 4, 4]]               0
           Conv2d-59            [-1, 120, 4, 4]           2,400
      BatchNorm2d-60            [-1, 120, 4, 4]             240
           Conv2d-61            [-1, 120, 4, 4]           2,160
      BatchNorm2d-62            [-1, 120, 4, 4]             240
           Conv2d-63             [-1, 15, 1, 1]           1,815
           Conv2d-64            [-1, 120, 1, 1]           1,920
    SqueezeExcite-65            [-1, 120, 4, 4]               0
           Conv2d-66             [-1, 20, 4, 4]           2,400
      BatchNorm2d-67             [-1, 20, 4, 4]              40
   ChannelShuffle-68             [-1, 40, 4, 4]               0
MuxInvertedResidual-69             [-1, 40, 4, 4]               0
       SplitBlock-70  [[-1, 20, 4, 4], [-1, 20, 4, 4]]               0
           Conv2d-71            [-1, 120, 4, 4]           2,400
      BatchNorm2d-72            [-1, 120, 4, 4]             240
           Conv2d-73            [-1, 120, 4, 4]           2,160
      BatchNorm2d-74            [-1, 120, 4, 4]             240
           Conv2d-75             [-1, 15, 1, 1]           1,815
           Conv2d-76            [-1, 120, 1, 1]           1,920
    SqueezeExcite-77            [-1, 120, 4, 4]               0
           Conv2d-78             [-1, 20, 4, 4]           2,400
      BatchNorm2d-79             [-1, 20, 4, 4]              40
   ChannelShuffle-80             [-1, 40, 4, 4]               0
MuxInvertedResidual-81             [-1, 40, 4, 4]               0
           Conv2d-82            [-1, 160, 4, 4]           6,400
      BatchNorm2d-83            [-1, 160, 4, 4]             320
           Conv2d-84             [-1, 40, 2, 2]             360
           Conv2d-85             [-1, 40, 2, 2]           1,000
           Conv2d-86             [-1, 40, 2, 2]           1,960
           Conv2d-87             [-1, 40, 2, 2]           3,240
      MixedConv2d-88            [-1, 160, 2, 2]               0
      BatchNorm2d-89            [-1, 160, 2, 2]             320
           Conv2d-90             [-1, 30, 1, 1]           4,830
           Conv2d-91            [-1, 160, 1, 1]           4,960
    SqueezeExcite-92            [-1, 160, 2, 2]               0
           Conv2d-93             [-1, 80, 2, 2]          12,800
      BatchNorm2d-94             [-1, 80, 2, 2]             160
 InvertedResidual-95             [-1, 80, 2, 2]               0
       SplitBlock-96  [[-1, 40, 2, 2], [-1, 40, 2, 2]]               0
           Conv2d-97            [-1, 240, 2, 2]           9,600
      BatchNorm2d-98            [-1, 240, 2, 2]             480
           Conv2d-99            [-1, 240, 2, 2]          12,000
     BatchNorm2d-100            [-1, 240, 2, 2]             480
          Conv2d-101             [-1, 30, 1, 1]           7,230
          Conv2d-102            [-1, 240, 1, 1]           7,440
   SqueezeExcite-103            [-1, 240, 2, 2]               0
          Conv2d-104             [-1, 40, 2, 2]           9,600
     BatchNorm2d-105             [-1, 40, 2, 2]              80
  ChannelShuffle-106             [-1, 80, 2, 2]               0
MuxInvertedResidual-107             [-1, 80, 2, 2]               0
      SplitBlock-108  [[-1, 40, 2, 2], [-1, 40, 2, 2]]               0
          Conv2d-109            [-1, 240, 2, 2]           9,600
     BatchNorm2d-110            [-1, 240, 2, 2]             480
          Conv2d-111            [-1, 240, 2, 2]          12,000
     BatchNorm2d-112            [-1, 240, 2, 2]             480
          Conv2d-113             [-1, 30, 1, 1]           7,230
          Conv2d-114            [-1, 240, 1, 1]           7,440
   SqueezeExcite-115            [-1, 240, 2, 2]               0
          Conv2d-116             [-1, 40, 2, 2]           9,600
     BatchNorm2d-117             [-1, 40, 2, 2]              80
  ChannelShuffle-118             [-1, 80, 2, 2]               0
MuxInvertedResidual-119             [-1, 80, 2, 2]               0
          Conv2d-120            [-1, 480, 2, 2]          38,400
     BatchNorm2d-121            [-1, 480, 2, 2]             960
          Conv2d-122            [-1, 480, 2, 2]          12,000
     BatchNorm2d-123            [-1, 480, 2, 2]             960
          Conv2d-124             [-1, 60, 1, 1]          28,860
          Conv2d-125            [-1, 480, 1, 1]          29,280
   SqueezeExcite-126            [-1, 480, 2, 2]               0
          Conv2d-127            [-1, 112, 2, 2]          53,760
     BatchNorm2d-128            [-1, 112, 2, 2]             224
InvertedResidual-129            [-1, 112, 2, 2]               0
      SplitBlock-130  [[-1, 56, 2, 2], [-1, 56, 2, 2]]               0
          Conv2d-131            [-1, 336, 2, 2]          18,816
     BatchNorm2d-132            [-1, 336, 2, 2]             672
          Conv2d-133            [-1, 336, 2, 2]          16,800
     BatchNorm2d-134            [-1, 336, 2, 2]             672
          Conv2d-135             [-1, 42, 1, 1]          14,154
          Conv2d-136            [-1, 336, 1, 1]          14,448
   SqueezeExcite-137            [-1, 336, 2, 2]               0
          Conv2d-138             [-1, 56, 2, 2]          18,816
     BatchNorm2d-139             [-1, 56, 2, 2]             112
  ChannelShuffle-140            [-1, 112, 2, 2]               0
MuxInvertedResidual-141            [-1, 112, 2, 2]               0
      SplitBlock-142  [[-1, 56, 2, 2], [-1, 56, 2, 2]]               0
          Conv2d-143            [-1, 336, 2, 2]          18,816
     BatchNorm2d-144            [-1, 336, 2, 2]             672
          Conv2d-145            [-1, 336, 2, 2]          16,800
     BatchNorm2d-146            [-1, 336, 2, 2]             672
          Conv2d-147             [-1, 42, 1, 1]          14,154
          Conv2d-148            [-1, 336, 1, 1]          14,448
   SqueezeExcite-149            [-1, 336, 2, 2]               0
          Conv2d-150             [-1, 56, 2, 2]          18,816
     BatchNorm2d-151             [-1, 56, 2, 2]             112
  ChannelShuffle-152            [-1, 112, 2, 2]               0
MuxInvertedResidual-153            [-1, 112, 2, 2]               0
          Conv2d-154            [-1, 448, 2, 2]          50,176
     BatchNorm2d-155            [-1, 448, 2, 2]             896
          Conv2d-156             [-1, 92, 1, 1]             828
          Conv2d-157             [-1, 89, 1, 1]           2,225
          Conv2d-158             [-1, 89, 1, 1]           4,361
          Conv2d-159             [-1, 89, 1, 1]           7,209
          Conv2d-160             [-1, 89, 1, 1]          10,769
     MixedConv2d-161            [-1, 448, 1, 1]               0
     BatchNorm2d-162            [-1, 448, 1, 1]             896
          Conv2d-163             [-1, 84, 1, 1]          37,716
          Conv2d-164            [-1, 448, 1, 1]          38,080
   SqueezeExcite-165            [-1, 448, 1, 1]               0
          Conv2d-166            [-1, 160, 1, 1]          71,680
     BatchNorm2d-167            [-1, 160, 1, 1]             320
InvertedResidual-168            [-1, 160, 1, 1]               0
      SplitBlock-169  [[-1, 80, 1, 1], [-1, 80, 1, 1]]               0
          Conv2d-170            [-1, 480, 1, 1]          38,400
     BatchNorm2d-171            [-1, 480, 1, 1]             960
          Conv2d-172            [-1, 480, 1, 1]          24,000
     BatchNorm2d-173            [-1, 480, 1, 1]             960
          Conv2d-174             [-1, 60, 1, 1]          28,860
          Conv2d-175            [-1, 480, 1, 1]          29,280
   SqueezeExcite-176            [-1, 480, 1, 1]               0
          Conv2d-177             [-1, 80, 1, 1]          38,400
     BatchNorm2d-178             [-1, 80, 1, 1]             160
  ChannelShuffle-179            [-1, 160, 1, 1]               0
MuxInvertedResidual-180            [-1, 160, 1, 1]               0
      SplitBlock-181  [[-1, 80, 1, 1], [-1, 80, 1, 1]]               0
          Conv2d-182            [-1, 480, 1, 1]          38,400
     BatchNorm2d-183            [-1, 480, 1, 1]             960
          Conv2d-184            [-1, 480, 1, 1]          24,000
     BatchNorm2d-185            [-1, 480, 1, 1]             960
          Conv2d-186             [-1, 60, 1, 1]          28,860
          Conv2d-187            [-1, 480, 1, 1]          29,280
   SqueezeExcite-188            [-1, 480, 1, 1]               0
          Conv2d-189             [-1, 80, 1, 1]          38,400
     BatchNorm2d-190             [-1, 80, 1, 1]             160
  ChannelShuffle-191            [-1, 160, 1, 1]               0
MuxInvertedResidual-192            [-1, 160, 1, 1]               0
      SplitBlock-193  [[-1, 80, 1, 1], [-1, 80, 1, 1]]               0
          Conv2d-194            [-1, 480, 1, 1]          38,400
     BatchNorm2d-195            [-1, 480, 1, 1]             960
          Conv2d-196            [-1, 480, 1, 1]          24,000
     BatchNorm2d-197            [-1, 480, 1, 1]             960
          Conv2d-198             [-1, 60, 1, 1]          28,860
          Conv2d-199            [-1, 480, 1, 1]          29,280
   SqueezeExcite-200            [-1, 480, 1, 1]               0
          Conv2d-201             [-1, 80, 1, 1]          38,400
     BatchNorm2d-202             [-1, 80, 1, 1]             160
  ChannelShuffle-203            [-1, 160, 1, 1]               0
MuxInvertedResidual-204            [-1, 160, 1, 1]               0
          Conv2d-205            [-1, 960, 1, 1]         153,600
     BatchNorm2d-206            [-1, 960, 1, 1]           1,920
          Conv2d-207            [-1, 960, 1, 1]           8,640
     BatchNorm2d-208            [-1, 960, 1, 1]           1,920
          Conv2d-209            [-1, 120, 1, 1]         115,320
          Conv2d-210            [-1, 960, 1, 1]         116,160
   SqueezeExcite-211            [-1, 960, 1, 1]               0
          Conv2d-212            [-1, 200, 1, 1]         192,000
     BatchNorm2d-213            [-1, 200, 1, 1]             400
InvertedResidual-214            [-1, 200, 1, 1]               0
          Conv2d-215           [-1, 1280, 1, 1]         256,000
     BatchNorm2d-216           [-1, 1280, 1, 1]           2,560
AdaptiveAvgPool2d-217           [-1, 1280, 1, 1]               0
SelectAdaptivePool2d-218           [-1, 1280, 1, 1]               0
          Linear-219                   [-1, 10]          12,810
================================================================
Total params: 2,086,086
Trainable params: 2,086,086
Non-trainable params: 0
----------------------------------------------------------------
Input size (MB): 0.01
Forward/backward pass size (MB): 9.71
Params size (MB): 7.96
Estimated Total Size (MB): 17.68
----------------------------------------------------------------
<class 'tuple'> ('conv_stem', Conv2d(3, 24, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))
<class 'tuple'> ('bn1', BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True))
<class 'tuple'> ('blocks', Sequential(
  (0): Sequential(
    (0): DepthwiseSeparableConv(
      (conv_dw): Conv2d(24, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=24, bias=False)
      (bn1): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SqueezeExcite(
        (conv_reduce): Conv2d(24, 6, kernel_size=(1, 1), stride=(1, 1))
        (conv_expand): Conv2d(6, 24, kernel_size=(1, 1), stride=(1, 1))
      )
      (conv_pw): Conv2d(24, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn2): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (1): Sequential(
    (0): InvertedResidual(
      (conv_pw): Conv2d(24, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_dw): Conv2d(96, 96, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=96, bias=False)
      (bn2): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SqueezeExcite(
        (conv_reduce): Conv2d(96, 18, kernel_size=(1, 1), stride=(1, 1))
        (conv_expand): Conv2d(18, 96, kernel_size=(1, 1), stride=(1, 1))
      )
      (conv_pwl): Conv2d(96, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (2): Sequential(
    (0): MuxInvertedResidual(
      (split): SplitBlock(ratio=0.50)
      (conv_pw): Conv2d(12, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_dw): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=24, bias=False)
      (bn2): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SqueezeExcite(
        (conv_reduce): Conv2d(48, 9, kernel_size=(1, 1), stride=(1, 1))
        (conv_expand): Conv2d(9, 48, kernel_size=(1, 1), stride=(1, 1))
      )
      (conv_pwl): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shuffle): ChannelShuffle(groups=2)
    )
  )
  (3): Sequential(
    (0): MuxInvertedResidual(
      (split): SplitBlock(ratio=0.50)
      (conv_pw): Conv2d(12, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_dw): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=24, bias=False)
      (bn2): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SqueezeExcite(
        (conv_reduce): Conv2d(48, 9, kernel_size=(1, 1), stride=(1, 1))
        (conv_expand): Conv2d(9, 48, kernel_size=(1, 1), stride=(1, 1))
      )
      (conv_pwl): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shuffle): ChannelShuffle(groups=2)
    )
  )
  (4): Sequential(
    (0): InvertedResidual(
      (conv_pw): Conv2d(24, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_dw): MixedConv2d(
        (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False)
        (1): Conv2d(32, 32, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=32, bias=False)
        (2): Conv2d(32, 32, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), groups=32, bias=False)
      )
      (bn2): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SqueezeExcite(
        (conv_reduce): Conv2d(96, 18, kernel_size=(1, 1), stride=(1, 1))
        (conv_expand): Conv2d(18, 96, kernel_size=(1, 1), stride=(1, 1))
      )
      (conv_pwl): Conv2d(96, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (5): Sequential(
    (0): MuxInvertedResidual(
      (split): SplitBlock(ratio=0.50)
      (conv_pw): Conv2d(20, 120, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_dw): Conv2d(120, 120, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=60, bias=False)
      (bn2): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SqueezeExcite(
        (conv_reduce): Conv2d(120, 15, kernel_size=(1, 1), stride=(1, 1))
        (conv_expand): Conv2d(15, 120, kernel_size=(1, 1), stride=(1, 1))
      )
      (conv_pwl): Conv2d(120, 20, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(20, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shuffle): ChannelShuffle(groups=2)
    )
  )
  (6): Sequential(
    (0): MuxInvertedResidual(
      (split): SplitBlock(ratio=0.50)
      (conv_pw): Conv2d(20, 120, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_dw): Conv2d(120, 120, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=60, bias=False)
      (bn2): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SqueezeExcite(
        (conv_reduce): Conv2d(120, 15, kernel_size=(1, 1), stride=(1, 1))
        (conv_expand): Conv2d(15, 120, kernel_size=(1, 1), stride=(1, 1))
      )
      (conv_pwl): Conv2d(120, 20, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(20, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shuffle): ChannelShuffle(groups=2)
    )
  )
  (7): Sequential(
    (0): InvertedResidual(
      (conv_pw): Conv2d(40, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_dw): MixedConv2d(
        (0): Conv2d(40, 40, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=40, bias=False)
        (1): Conv2d(40, 40, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=40, bias=False)
        (2): Conv2d(40, 40, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), groups=40, bias=False)
        (3): Conv2d(40, 40, kernel_size=(9, 9), stride=(2, 2), padding=(4, 4), groups=40, bias=False)
      )
      (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SqueezeExcite(
        (conv_reduce): Conv2d(160, 30, kernel_size=(1, 1), stride=(1, 1))
        (conv_expand): Conv2d(30, 160, kernel_size=(1, 1), stride=(1, 1))
      )
      (conv_pwl): Conv2d(160, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (8): Sequential(
    (0): MuxInvertedResidual(
      (split): SplitBlock(ratio=0.50)
      (conv_pw): Conv2d(40, 240, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_dw): Conv2d(240, 240, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=120, bias=False)
      (bn2): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SqueezeExcite(
        (conv_reduce): Conv2d(240, 30, kernel_size=(1, 1), stride=(1, 1))
        (conv_expand): Conv2d(30, 240, kernel_size=(1, 1), stride=(1, 1))
      )
      (conv_pwl): Conv2d(240, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shuffle): ChannelShuffle(groups=2)
    )
  )
  (9): Sequential(
    (0): MuxInvertedResidual(
      (split): SplitBlock(ratio=0.50)
      (conv_pw): Conv2d(40, 240, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_dw): Conv2d(240, 240, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=120, bias=False)
      (bn2): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SqueezeExcite(
        (conv_reduce): Conv2d(240, 30, kernel_size=(1, 1), stride=(1, 1))
        (conv_expand): Conv2d(30, 240, kernel_size=(1, 1), stride=(1, 1))
      )
      (conv_pwl): Conv2d(240, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shuffle): ChannelShuffle(groups=2)
    )
  )
  (10): Sequential(
    (0): InvertedResidual(
      (conv_pw): Conv2d(80, 480, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_dw): Conv2d(480, 480, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=480, bias=False)
      (bn2): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SqueezeExcite(
        (conv_reduce): Conv2d(480, 60, kernel_size=(1, 1), stride=(1, 1))
        (conv_expand): Conv2d(60, 480, kernel_size=(1, 1), stride=(1, 1))
      )
      (conv_pwl): Conv2d(480, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (11): Sequential(
    (0): MuxInvertedResidual(
      (split): SplitBlock(ratio=0.50)
      (conv_pw): Conv2d(56, 336, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(336, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_dw): Conv2d(336, 336, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=168, bias=False)
      (bn2): BatchNorm2d(336, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SqueezeExcite(
        (conv_reduce): Conv2d(336, 42, kernel_size=(1, 1), stride=(1, 1))
        (conv_expand): Conv2d(42, 336, kernel_size=(1, 1), stride=(1, 1))
      )
      (conv_pwl): Conv2d(336, 56, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(56, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shuffle): ChannelShuffle(groups=2)
    )
  )
  (12): Sequential(
    (0): MuxInvertedResidual(
      (split): SplitBlock(ratio=0.50)
      (conv_pw): Conv2d(56, 336, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(336, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_dw): Conv2d(336, 336, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=168, bias=False)
      (bn2): BatchNorm2d(336, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SqueezeExcite(
        (conv_reduce): Conv2d(336, 42, kernel_size=(1, 1), stride=(1, 1))
        (conv_expand): Conv2d(42, 336, kernel_size=(1, 1), stride=(1, 1))
      )
      (conv_pwl): Conv2d(336, 56, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(56, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shuffle): ChannelShuffle(groups=2)
    )
  )
  (13): Sequential(
    (0): InvertedResidual(
      (conv_pw): Conv2d(112, 448, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_dw): MixedConv2d(
        (0): Conv2d(92, 92, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=92, bias=False)
        (1): Conv2d(89, 89, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=89, bias=False)
        (2): Conv2d(89, 89, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), groups=89, bias=False)
        (3): Conv2d(89, 89, kernel_size=(9, 9), stride=(2, 2), padding=(4, 4), groups=89, bias=False)
        (4): Conv2d(89, 89, kernel_size=(11, 11), stride=(2, 2), padding=(5, 5), groups=89, bias=False)
      )
      (bn2): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SqueezeExcite(
        (conv_reduce): Conv2d(448, 84, kernel_size=(1, 1), stride=(1, 1))
        (conv_expand): Conv2d(84, 448, kernel_size=(1, 1), stride=(1, 1))
      )
      (conv_pwl): Conv2d(448, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (14): Sequential(
    (0): MuxInvertedResidual(
      (split): SplitBlock(ratio=0.50)
      (conv_pw): Conv2d(80, 480, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_dw): Conv2d(480, 480, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=240, bias=False)
      (bn2): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SqueezeExcite(
        (conv_reduce): Conv2d(480, 60, kernel_size=(1, 1), stride=(1, 1))
        (conv_expand): Conv2d(60, 480, kernel_size=(1, 1), stride=(1, 1))
      )
      (conv_pwl): Conv2d(480, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shuffle): ChannelShuffle(groups=2)
    )
  )
  (15): Sequential(
    (0): MuxInvertedResidual(
      (split): SplitBlock(ratio=0.50)
      (conv_pw): Conv2d(80, 480, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_dw): Conv2d(480, 480, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=240, bias=False)
      (bn2): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SqueezeExcite(
        (conv_reduce): Conv2d(480, 60, kernel_size=(1, 1), stride=(1, 1))
        (conv_expand): Conv2d(60, 480, kernel_size=(1, 1), stride=(1, 1))
      )
      (conv_pwl): Conv2d(480, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shuffle): ChannelShuffle(groups=2)
    )
  )
  (16): Sequential(
    (0): MuxInvertedResidual(
      (split): SplitBlock(ratio=0.50)
      (conv_pw): Conv2d(80, 480, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_dw): Conv2d(480, 480, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=240, bias=False)
      (bn2): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SqueezeExcite(
        (conv_reduce): Conv2d(480, 60, kernel_size=(1, 1), stride=(1, 1))
        (conv_expand): Conv2d(60, 480, kernel_size=(1, 1), stride=(1, 1))
      )
      (conv_pwl): Conv2d(480, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shuffle): ChannelShuffle(groups=2)
    )
  )
  (17): Sequential(
    (0): InvertedResidual(
      (conv_pw): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_dw): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SqueezeExcite(
        (conv_reduce): Conv2d(960, 120, kernel_size=(1, 1), stride=(1, 1))
        (conv_expand): Conv2d(120, 960, kernel_size=(1, 1), stride=(1, 1))
      )
      (conv_pwl): Conv2d(960, 200, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(200, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
))
<class 'tuple'> ('conv_head', Conv2d(200, 1280, kernel_size=(1, 1), stride=(1, 1), bias=False))
<class 'tuple'> ('bn2', BatchNorm2d(1280, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True))
<class 'tuple'> ('global_pool', SelectAdaptivePool2d (pool_type=avg, flatten=False))
<class 'tuple'> ('classifier', Linear(in_features=1280, out_features=10, bias=True))
<class 'tuple'> ('conv_stem', Conv2d(3, 24, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))
<class 'tuple'> ('bn1', BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True))
<class 'tuple'> ('blocks', Sequential(
  (0): Sequential(
    (0): DepthwiseSeparableConv(
      (conv_dw): Conv2d(24, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=24, bias=False)
      (bn1): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SqueezeExcite(
        (conv_reduce): Conv2d(24, 6, kernel_size=(1, 1), stride=(1, 1))
        (conv_expand): Conv2d(6, 24, kernel_size=(1, 1), stride=(1, 1))
      )
      (conv_pw): Conv2d(24, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn2): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (1): Sequential(
    (0): InvertedResidual(
      (conv_pw): Conv2d(24, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_dw): Conv2d(96, 96, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=96, bias=False)
      (bn2): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SqueezeExcite(
        (conv_reduce): Conv2d(96, 18, kernel_size=(1, 1), stride=(1, 1))
        (conv_expand): Conv2d(18, 96, kernel_size=(1, 1), stride=(1, 1))
      )
      (conv_pwl): Conv2d(96, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (2): Sequential(
    (0): MuxInvertedResidual(
      (split): SplitBlock(ratio=0.50)
      (conv_pw): Conv2d(12, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_dw): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=24, bias=False)
      (bn2): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SqueezeExcite(
        (conv_reduce): Conv2d(48, 9, kernel_size=(1, 1), stride=(1, 1))
        (conv_expand): Conv2d(9, 48, kernel_size=(1, 1), stride=(1, 1))
      )
      (conv_pwl): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shuffle): ChannelShuffle(groups=2)
    )
  )
  (3): Sequential(
    (0): MuxInvertedResidual(
      (split): SplitBlock(ratio=0.50)
      (conv_pw): Conv2d(12, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_dw): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=24, bias=False)
      (bn2): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SqueezeExcite(
        (conv_reduce): Conv2d(48, 9, kernel_size=(1, 1), stride=(1, 1))
        (conv_expand): Conv2d(9, 48, kernel_size=(1, 1), stride=(1, 1))
      )
      (conv_pwl): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shuffle): ChannelShuffle(groups=2)
    )
  )
  (4): Sequential(
    (0): InvertedResidual(
      (conv_pw): Conv2d(24, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_dw): MixedConv2d(
        (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False)
        (1): Conv2d(32, 32, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=32, bias=False)
        (2): Conv2d(32, 32, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), groups=32, bias=False)
      )
      (bn2): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SqueezeExcite(
        (conv_reduce): Conv2d(96, 18, kernel_size=(1, 1), stride=(1, 1))
        (conv_expand): Conv2d(18, 96, kernel_size=(1, 1), stride=(1, 1))
      )
      (conv_pwl): Conv2d(96, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (5): Sequential(
    (0): MuxInvertedResidual(
      (split): SplitBlock(ratio=0.50)
      (conv_pw): Conv2d(20, 120, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_dw): Conv2d(120, 120, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=60, bias=False)
      (bn2): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SqueezeExcite(
        (conv_reduce): Conv2d(120, 15, kernel_size=(1, 1), stride=(1, 1))
        (conv_expand): Conv2d(15, 120, kernel_size=(1, 1), stride=(1, 1))
      )
      (conv_pwl): Conv2d(120, 20, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(20, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shuffle): ChannelShuffle(groups=2)
    )
  )
  (6): Sequential(
    (0): MuxInvertedResidual(
      (split): SplitBlock(ratio=0.50)
      (conv_pw): Conv2d(20, 120, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_dw): Conv2d(120, 120, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=60, bias=False)
      (bn2): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SqueezeExcite(
        (conv_reduce): Conv2d(120, 15, kernel_size=(1, 1), stride=(1, 1))
        (conv_expand): Conv2d(15, 120, kernel_size=(1, 1), stride=(1, 1))
      )
      (conv_pwl): Conv2d(120, 20, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(20, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shuffle): ChannelShuffle(groups=2)
    )
  )
  (7): Sequential(
    (0): InvertedResidual(
      (conv_pw): Conv2d(40, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_dw): MixedConv2d(
        (0): Conv2d(40, 40, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=40, bias=False)
        (1): Conv2d(40, 40, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=40, bias=False)
        (2): Conv2d(40, 40, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), groups=40, bias=False)
        (3): Conv2d(40, 40, kernel_size=(9, 9), stride=(2, 2), padding=(4, 4), groups=40, bias=False)
      )
      (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SqueezeExcite(
        (conv_reduce): Conv2d(160, 30, kernel_size=(1, 1), stride=(1, 1))
        (conv_expand): Conv2d(30, 160, kernel_size=(1, 1), stride=(1, 1))
      )
      (conv_pwl): Conv2d(160, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (8): Sequential(
    (0): MuxInvertedResidual(
      (split): SplitBlock(ratio=0.50)
      (conv_pw): Conv2d(40, 240, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_dw): Conv2d(240, 240, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=120, bias=False)
      (bn2): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SqueezeExcite(
        (conv_reduce): Conv2d(240, 30, kernel_size=(1, 1), stride=(1, 1))
        (conv_expand): Conv2d(30, 240, kernel_size=(1, 1), stride=(1, 1))
      )
      (conv_pwl): Conv2d(240, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shuffle): ChannelShuffle(groups=2)
    )
  )
  (9): Sequential(
    (0): MuxInvertedResidual(
      (split): SplitBlock(ratio=0.50)
      (conv_pw): Conv2d(40, 240, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_dw): Conv2d(240, 240, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=120, bias=False)
      (bn2): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SqueezeExcite(
        (conv_reduce): Conv2d(240, 30, kernel_size=(1, 1), stride=(1, 1))
        (conv_expand): Conv2d(30, 240, kernel_size=(1, 1), stride=(1, 1))
      )
      (conv_pwl): Conv2d(240, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shuffle): ChannelShuffle(groups=2)
    )
  )
  (10): Sequential(
    (0): InvertedResidual(
      (conv_pw): Conv2d(80, 480, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_dw): Conv2d(480, 480, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=480, bias=False)
      (bn2): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SqueezeExcite(
        (conv_reduce): Conv2d(480, 60, kernel_size=(1, 1), stride=(1, 1))
        (conv_expand): Conv2d(60, 480, kernel_size=(1, 1), stride=(1, 1))
      )
      (conv_pwl): Conv2d(480, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (11): Sequential(
    (0): MuxInvertedResidual(
      (split): SplitBlock(ratio=0.50)
      (conv_pw): Conv2d(56, 336, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(336, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_dw): Conv2d(336, 336, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=168, bias=False)
      (bn2): BatchNorm2d(336, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SqueezeExcite(
        (conv_reduce): Conv2d(336, 42, kernel_size=(1, 1), stride=(1, 1))
        (conv_expand): Conv2d(42, 336, kernel_size=(1, 1), stride=(1, 1))
      )
      (conv_pwl): Conv2d(336, 56, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(56, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shuffle): ChannelShuffle(groups=2)
    )
  )
  (12): Sequential(
    (0): MuxInvertedResidual(
      (split): SplitBlock(ratio=0.50)
      (conv_pw): Conv2d(56, 336, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(336, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_dw): Conv2d(336, 336, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=168, bias=False)
      (bn2): BatchNorm2d(336, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SqueezeExcite(
        (conv_reduce): Conv2d(336, 42, kernel_size=(1, 1), stride=(1, 1))
        (conv_expand): Conv2d(42, 336, kernel_size=(1, 1), stride=(1, 1))
      )
      (conv_pwl): Conv2d(336, 56, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(56, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shuffle): ChannelShuffle(groups=2)
    )
  )
  (13): Sequential(
    (0): InvertedResidual(
      (conv_pw): Conv2d(112, 448, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_dw): MixedConv2d(
        (0): Conv2d(92, 92, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=92, bias=False)
        (1): Conv2d(89, 89, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=89, bias=False)
        (2): Conv2d(89, 89, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), groups=89, bias=False)
        (3): Conv2d(89, 89, kernel_size=(9, 9), stride=(2, 2), padding=(4, 4), groups=89, bias=False)
        (4): Conv2d(89, 89, kernel_size=(11, 11), stride=(2, 2), padding=(5, 5), groups=89, bias=False)
      )
      (bn2): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SqueezeExcite(
        (conv_reduce): Conv2d(448, 84, kernel_size=(1, 1), stride=(1, 1))
        (conv_expand): Conv2d(84, 448, kernel_size=(1, 1), stride=(1, 1))
      )
      (conv_pwl): Conv2d(448, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (14): Sequential(
    (0): MuxInvertedResidual(
      (split): SplitBlock(ratio=0.50)
      (conv_pw): Conv2d(80, 480, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_dw): Conv2d(480, 480, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=240, bias=False)
      (bn2): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SqueezeExcite(
        (conv_reduce): Conv2d(480, 60, kernel_size=(1, 1), stride=(1, 1))
        (conv_expand): Conv2d(60, 480, kernel_size=(1, 1), stride=(1, 1))
      )
      (conv_pwl): Conv2d(480, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shuffle): ChannelShuffle(groups=2)
    )
  )
  (15): Sequential(
    (0): MuxInvertedResidual(
      (split): SplitBlock(ratio=0.50)
      (conv_pw): Conv2d(80, 480, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_dw): Conv2d(480, 480, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=240, bias=False)
      (bn2): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SqueezeExcite(
        (conv_reduce): Conv2d(480, 60, kernel_size=(1, 1), stride=(1, 1))
        (conv_expand): Conv2d(60, 480, kernel_size=(1, 1), stride=(1, 1))
      )
      (conv_pwl): Conv2d(480, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shuffle): ChannelShuffle(groups=2)
    )
  )
  (16): Sequential(
    (0): MuxInvertedResidual(
      (split): SplitBlock(ratio=0.50)
      (conv_pw): Conv2d(80, 480, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_dw): Conv2d(480, 480, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=240, bias=False)
      (bn2): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SqueezeExcite(
        (conv_reduce): Conv2d(480, 60, kernel_size=(1, 1), stride=(1, 1))
        (conv_expand): Conv2d(60, 480, kernel_size=(1, 1), stride=(1, 1))
      )
      (conv_pwl): Conv2d(480, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shuffle): ChannelShuffle(groups=2)
    )
  )
  (17): Sequential(
    (0): InvertedResidual(
      (conv_pw): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_dw): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SqueezeExcite(
        (conv_reduce): Conv2d(960, 120, kernel_size=(1, 1), stride=(1, 1))
        (conv_expand): Conv2d(120, 960, kernel_size=(1, 1), stride=(1, 1))
      )
      (conv_pwl): Conv2d(960, 200, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(200, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
))
<class 'tuple'> ('conv_head', Conv2d(200, 1280, kernel_size=(1, 1), stride=(1, 1), bias=False))
<class 'tuple'> ('bn2', BatchNorm2d(1280, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True))
<class 'tuple'> ('global_pool', SelectAdaptivePool2d (pool_type=avg, flatten=False))
<class 'tuple'> ('classifier', Linear(in_features=1280, out_features=10, bias=True))
<class 'tuple'> ('conv_stem', Conv2d(3, 24, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))
<class 'tuple'> ('bn1', BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True))
<class 'tuple'> ('blocks', Sequential(
  (0): Sequential(
    (0): DepthwiseSeparableConv(
      (conv_dw): Conv2d(24, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=24, bias=False)
      (bn1): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SqueezeExcite(
        (conv_reduce): Conv2d(24, 6, kernel_size=(1, 1), stride=(1, 1))
        (conv_expand): Conv2d(6, 24, kernel_size=(1, 1), stride=(1, 1))
      )
      (conv_pw): Conv2d(24, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn2): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (1): Sequential(
    (0): InvertedResidual(
      (conv_pw): Conv2d(24, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_dw): Conv2d(96, 96, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=96, bias=False)
      (bn2): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SqueezeExcite(
        (conv_reduce): Conv2d(96, 18, kernel_size=(1, 1), stride=(1, 1))
        (conv_expand): Conv2d(18, 96, kernel_size=(1, 1), stride=(1, 1))
      )
      (conv_pwl): Conv2d(96, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (2): Sequential(
    (0): MuxInvertedResidual(
      (split): SplitBlock(ratio=0.50)
      (conv_pw): Conv2d(12, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_dw): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=24, bias=False)
      (bn2): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SqueezeExcite(
        (conv_reduce): Conv2d(48, 9, kernel_size=(1, 1), stride=(1, 1))
        (conv_expand): Conv2d(9, 48, kernel_size=(1, 1), stride=(1, 1))
      )
      (conv_pwl): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shuffle): ChannelShuffle(groups=2)
    )
  )
  (3): Sequential(
    (0): MuxInvertedResidual(
      (split): SplitBlock(ratio=0.50)
      (conv_pw): Conv2d(12, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_dw): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=24, bias=False)
      (bn2): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SqueezeExcite(
        (conv_reduce): Conv2d(48, 9, kernel_size=(1, 1), stride=(1, 1))
        (conv_expand): Conv2d(9, 48, kernel_size=(1, 1), stride=(1, 1))
      )
      (conv_pwl): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shuffle): ChannelShuffle(groups=2)
    )
  )
  (4): Sequential(
    (0): InvertedResidual(
      (conv_pw): Conv2d(24, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_dw): MixedConv2d(
        (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False)
        (1): Conv2d(32, 32, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=32, bias=False)
        (2): Conv2d(32, 32, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), groups=32, bias=False)
      )
      (bn2): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SqueezeExcite(
        (conv_reduce): Conv2d(96, 18, kernel_size=(1, 1), stride=(1, 1))
        (conv_expand): Conv2d(18, 96, kernel_size=(1, 1), stride=(1, 1))
      )
      (conv_pwl): Conv2d(96, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (5): Sequential(
    (0): MuxInvertedResidual(
      (split): SplitBlock(ratio=0.50)
      (conv_pw): Conv2d(20, 120, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_dw): Conv2d(120, 120, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=60, bias=False)
      (bn2): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SqueezeExcite(
        (conv_reduce): Conv2d(120, 15, kernel_size=(1, 1), stride=(1, 1))
        (conv_expand): Conv2d(15, 120, kernel_size=(1, 1), stride=(1, 1))
      )
      (conv_pwl): Conv2d(120, 20, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(20, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shuffle): ChannelShuffle(groups=2)
    )
  )
  (6): Sequential(
    (0): MuxInvertedResidual(
      (split): SplitBlock(ratio=0.50)
      (conv_pw): Conv2d(20, 120, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_dw): Conv2d(120, 120, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=60, bias=False)
      (bn2): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SqueezeExcite(
        (conv_reduce): Conv2d(120, 15, kernel_size=(1, 1), stride=(1, 1))
        (conv_expand): Conv2d(15, 120, kernel_size=(1, 1), stride=(1, 1))
      )
      (conv_pwl): Conv2d(120, 20, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(20, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shuffle): ChannelShuffle(groups=2)
    )
  )
  (7): Sequential(
    (0): InvertedResidual(
      (conv_pw): Conv2d(40, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_dw): MixedConv2d(
        (0): Conv2d(40, 40, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=40, bias=False)
        (1): Conv2d(40, 40, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=40, bias=False)
        (2): Conv2d(40, 40, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), groups=40, bias=False)
        (3): Conv2d(40, 40, kernel_size=(9, 9), stride=(2, 2), padding=(4, 4), groups=40, bias=False)
      )
      (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SqueezeExcite(
        (conv_reduce): Conv2d(160, 30, kernel_size=(1, 1), stride=(1, 1))
        (conv_expand): Conv2d(30, 160, kernel_size=(1, 1), stride=(1, 1))
      )
      (conv_pwl): Conv2d(160, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (8): Sequential(
    (0): MuxInvertedResidual(
      (split): SplitBlock(ratio=0.50)
      (conv_pw): Conv2d(40, 240, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_dw): Conv2d(240, 240, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=120, bias=False)
      (bn2): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SqueezeExcite(
        (conv_reduce): Conv2d(240, 30, kernel_size=(1, 1), stride=(1, 1))
        (conv_expand): Conv2d(30, 240, kernel_size=(1, 1), stride=(1, 1))
      )
      (conv_pwl): Conv2d(240, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shuffle): ChannelShuffle(groups=2)
    )
  )
  (9): Sequential(
    (0): MuxInvertedResidual(
      (split): SplitBlock(ratio=0.50)
      (conv_pw): Conv2d(40, 240, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_dw): Conv2d(240, 240, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=120, bias=False)
      (bn2): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SqueezeExcite(
        (conv_reduce): Conv2d(240, 30, kernel_size=(1, 1), stride=(1, 1))
        (conv_expand): Conv2d(30, 240, kernel_size=(1, 1), stride=(1, 1))
      )
      (conv_pwl): Conv2d(240, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shuffle): ChannelShuffle(groups=2)
    )
  )
  (10): Sequential(
    (0): InvertedResidual(
      (conv_pw): Conv2d(80, 480, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_dw): Conv2d(480, 480, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=480, bias=False)
      (bn2): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SqueezeExcite(
        (conv_reduce): Conv2d(480, 60, kernel_size=(1, 1), stride=(1, 1))
        (conv_expand): Conv2d(60, 480, kernel_size=(1, 1), stride=(1, 1))
      )
      (conv_pwl): Conv2d(480, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (11): Sequential(
    (0): MuxInvertedResidual(
      (split): SplitBlock(ratio=0.50)
      (conv_pw): Conv2d(56, 336, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(336, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_dw): Conv2d(336, 336, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=168, bias=False)
      (bn2): BatchNorm2d(336, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SqueezeExcite(
        (conv_reduce): Conv2d(336, 42, kernel_size=(1, 1), stride=(1, 1))
        (conv_expand): Conv2d(42, 336, kernel_size=(1, 1), stride=(1, 1))
      )
      (conv_pwl): Conv2d(336, 56, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(56, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shuffle): ChannelShuffle(groups=2)
    )
  )
  (12): Sequential(
    (0): MuxInvertedResidual(
      (split): SplitBlock(ratio=0.50)
      (conv_pw): Conv2d(56, 336, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(336, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_dw): Conv2d(336, 336, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=168, bias=False)
      (bn2): BatchNorm2d(336, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SqueezeExcite(
        (conv_reduce): Conv2d(336, 42, kernel_size=(1, 1), stride=(1, 1))
        (conv_expand): Conv2d(42, 336, kernel_size=(1, 1), stride=(1, 1))
      )
      (conv_pwl): Conv2d(336, 56, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(56, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shuffle): ChannelShuffle(groups=2)
    )
  )
  (13): Sequential(
    (0): InvertedResidual(
      (conv_pw): Conv2d(112, 448, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_dw): MixedConv2d(
        (0): Conv2d(92, 92, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=92, bias=False)
        (1): Conv2d(89, 89, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=89, bias=False)
        (2): Conv2d(89, 89, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), groups=89, bias=False)
        (3): Conv2d(89, 89, kernel_size=(9, 9), stride=(2, 2), padding=(4, 4), groups=89, bias=False)
        (4): Conv2d(89, 89, kernel_size=(11, 11), stride=(2, 2), padding=(5, 5), groups=89, bias=False)
      )
      (bn2): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SqueezeExcite(
        (conv_reduce): Conv2d(448, 84, kernel_size=(1, 1), stride=(1, 1))
        (conv_expand): Conv2d(84, 448, kernel_size=(1, 1), stride=(1, 1))
      )
      (conv_pwl): Conv2d(448, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (14): Sequential(
    (0): MuxInvertedResidual(
      (split): SplitBlock(ratio=0.50)
      (conv_pw): Conv2d(80, 480, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_dw): Conv2d(480, 480, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=240, bias=False)
      (bn2): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SqueezeExcite(
        (conv_reduce): Conv2d(480, 60, kernel_size=(1, 1), stride=(1, 1))
        (conv_expand): Conv2d(60, 480, kernel_size=(1, 1), stride=(1, 1))
      )
      (conv_pwl): Conv2d(480, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shuffle): ChannelShuffle(groups=2)
    )
  )
  (15): Sequential(
    (0): MuxInvertedResidual(
      (split): SplitBlock(ratio=0.50)
      (conv_pw): Conv2d(80, 480, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_dw): Conv2d(480, 480, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=240, bias=False)
      (bn2): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SqueezeExcite(
        (conv_reduce): Conv2d(480, 60, kernel_size=(1, 1), stride=(1, 1))
        (conv_expand): Conv2d(60, 480, kernel_size=(1, 1), stride=(1, 1))
      )
      (conv_pwl): Conv2d(480, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shuffle): ChannelShuffle(groups=2)
    )
  )
  (16): Sequential(
    (0): MuxInvertedResidual(
      (split): SplitBlock(ratio=0.50)
      (conv_pw): Conv2d(80, 480, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_dw): Conv2d(480, 480, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=240, bias=False)
      (bn2): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SqueezeExcite(
        (conv_reduce): Conv2d(480, 60, kernel_size=(1, 1), stride=(1, 1))
        (conv_expand): Conv2d(60, 480, kernel_size=(1, 1), stride=(1, 1))
      )
      (conv_pwl): Conv2d(480, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shuffle): ChannelShuffle(groups=2)
    )
  )
  (17): Sequential(
    (0): InvertedResidual(
      (conv_pw): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_dw): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SqueezeExcite(
        (conv_reduce): Conv2d(960, 120, kernel_size=(1, 1), stride=(1, 1))
        (conv_expand): Conv2d(120, 960, kernel_size=(1, 1), stride=(1, 1))
      )
      (conv_pwl): Conv2d(960, 200, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(200, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
))
<class 'tuple'> ('conv_head', Conv2d(200, 1280, kernel_size=(1, 1), stride=(1, 1), bias=False))
<class 'tuple'> ('bn2', BatchNorm2d(1280, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True))
<class 'tuple'> ('global_pool', SelectAdaptivePool2d (pool_type=avg, flatten=False))
<class 'tuple'> ('classifier', Linear(in_features=1280, out_features=10, bias=True))
<class 'tuple'> ('conv_stem', Conv2d(3, 24, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))
<class 'tuple'> ('bn1', BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True))
<class 'tuple'> ('blocks', Sequential(
  (0): Sequential(
    (0): DepthwiseSeparableConv(
      (conv_dw): Conv2d(24, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=24, bias=False)
      (bn1): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SqueezeExcite(
        (conv_reduce): Conv2d(24, 6, kernel_size=(1, 1), stride=(1, 1))
        (conv_expand): Conv2d(6, 24, kernel_size=(1, 1), stride=(1, 1))
      )
      (conv_pw): Conv2d(24, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn2): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (1): Sequential(
    (0): InvertedResidual(
      (conv_pw): Conv2d(24, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_dw): Conv2d(96, 96, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=96, bias=False)
      (bn2): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SqueezeExcite(
        (conv_reduce): Conv2d(96, 18, kernel_size=(1, 1), stride=(1, 1))
        (conv_expand): Conv2d(18, 96, kernel_size=(1, 1), stride=(1, 1))
      )
      (conv_pwl): Conv2d(96, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (2): Sequential(
    (0): MuxInvertedResidual(
      (split): SplitBlock(ratio=0.50)
      (conv_pw): Conv2d(12, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_dw): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=24, bias=False)
      (bn2): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SqueezeExcite(
        (conv_reduce): Conv2d(48, 9, kernel_size=(1, 1), stride=(1, 1))
        (conv_expand): Conv2d(9, 48, kernel_size=(1, 1), stride=(1, 1))
      )
      (conv_pwl): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shuffle): ChannelShuffle(groups=2)
    )
  )
  (3): Sequential(
    (0): MuxInvertedResidual(
      (split): SplitBlock(ratio=0.50)
      (conv_pw): Conv2d(12, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_dw): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=24, bias=False)
      (bn2): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SqueezeExcite(
        (conv_reduce): Conv2d(48, 9, kernel_size=(1, 1), stride=(1, 1))
        (conv_expand): Conv2d(9, 48, kernel_size=(1, 1), stride=(1, 1))
      )
      (conv_pwl): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shuffle): ChannelShuffle(groups=2)
    )
  )
  (4): Sequential(
    (0): InvertedResidual(
      (conv_pw): Conv2d(24, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_dw): MixedConv2d(
        (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False)
        (1): Conv2d(32, 32, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=32, bias=False)
        (2): Conv2d(32, 32, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), groups=32, bias=False)
      )
      (bn2): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SqueezeExcite(
        (conv_reduce): Conv2d(96, 18, kernel_size=(1, 1), stride=(1, 1))
        (conv_expand): Conv2d(18, 96, kernel_size=(1, 1), stride=(1, 1))
      )
      (conv_pwl): Conv2d(96, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (5): Sequential(
    (0): MuxInvertedResidual(
      (split): SplitBlock(ratio=0.50)
      (conv_pw): Conv2d(20, 120, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_dw): Conv2d(120, 120, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=60, bias=False)
      (bn2): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SqueezeExcite(
        (conv_reduce): Conv2d(120, 15, kernel_size=(1, 1), stride=(1, 1))
        (conv_expand): Conv2d(15, 120, kernel_size=(1, 1), stride=(1, 1))
      )
      (conv_pwl): Conv2d(120, 20, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(20, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shuffle): ChannelShuffle(groups=2)
    )
  )
  (6): Sequential(
    (0): MuxInvertedResidual(
      (split): SplitBlock(ratio=0.50)
      (conv_pw): Conv2d(20, 120, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_dw): Conv2d(120, 120, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=60, bias=False)
      (bn2): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SqueezeExcite(
        (conv_reduce): Conv2d(120, 15, kernel_size=(1, 1), stride=(1, 1))
        (conv_expand): Conv2d(15, 120, kernel_size=(1, 1), stride=(1, 1))
      )
      (conv_pwl): Conv2d(120, 20, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(20, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shuffle): ChannelShuffle(groups=2)
    )
  )
  (7): Sequential(
    (0): InvertedResidual(
      (conv_pw): Conv2d(40, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_dw): MixedConv2d(
        (0): Conv2d(40, 40, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=40, bias=False)
        (1): Conv2d(40, 40, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=40, bias=False)
        (2): Conv2d(40, 40, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), groups=40, bias=False)
        (3): Conv2d(40, 40, kernel_size=(9, 9), stride=(2, 2), padding=(4, 4), groups=40, bias=False)
      )
      (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SqueezeExcite(
        (conv_reduce): Conv2d(160, 30, kernel_size=(1, 1), stride=(1, 1))
        (conv_expand): Conv2d(30, 160, kernel_size=(1, 1), stride=(1, 1))
      )
      (conv_pwl): Conv2d(160, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (8): Sequential(
    (0): MuxInvertedResidual(
      (split): SplitBlock(ratio=0.50)
      (conv_pw): Conv2d(40, 240, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_dw): Conv2d(240, 240, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=120, bias=False)
      (bn2): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SqueezeExcite(
        (conv_reduce): Conv2d(240, 30, kernel_size=(1, 1), stride=(1, 1))
        (conv_expand): Conv2d(30, 240, kernel_size=(1, 1), stride=(1, 1))
      )
      (conv_pwl): Conv2d(240, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shuffle): ChannelShuffle(groups=2)
    )
  )
  (9): Sequential(
    (0): MuxInvertedResidual(
      (split): SplitBlock(ratio=0.50)
      (conv_pw): Conv2d(40, 240, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_dw): Conv2d(240, 240, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=120, bias=False)
      (bn2): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SqueezeExcite(
        (conv_reduce): Conv2d(240, 30, kernel_size=(1, 1), stride=(1, 1))
        (conv_expand): Conv2d(30, 240, kernel_size=(1, 1), stride=(1, 1))
      )
      (conv_pwl): Conv2d(240, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shuffle): ChannelShuffle(groups=2)
    )
  )
  (10): Sequential(
    (0): InvertedResidual(
      (conv_pw): Conv2d(80, 480, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_dw): Conv2d(480, 480, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=480, bias=False)
      (bn2): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SqueezeExcite(
        (conv_reduce): Conv2d(480, 60, kernel_size=(1, 1), stride=(1, 1))
        (conv_expand): Conv2d(60, 480, kernel_size=(1, 1), stride=(1, 1))
      )
      (conv_pwl): Conv2d(480, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (11): Sequential(
    (0): MuxInvertedResidual(
      (split): SplitBlock(ratio=0.50)
      (conv_pw): Conv2d(56, 336, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(336, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_dw): Conv2d(336, 336, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=168, bias=False)
      (bn2): BatchNorm2d(336, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SqueezeExcite(
        (conv_reduce): Conv2d(336, 42, kernel_size=(1, 1), stride=(1, 1))
        (conv_expand): Conv2d(42, 336, kernel_size=(1, 1), stride=(1, 1))
      )
      (conv_pwl): Conv2d(336, 56, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(56, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shuffle): ChannelShuffle(groups=2)
    )
  )
  (12): Sequential(
    (0): MuxInvertedResidual(
      (split): SplitBlock(ratio=0.50)
      (conv_pw): Conv2d(56, 336, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(336, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_dw): Conv2d(336, 336, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=168, bias=False)
      (bn2): BatchNorm2d(336, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SqueezeExcite(
        (conv_reduce): Conv2d(336, 42, kernel_size=(1, 1), stride=(1, 1))
        (conv_expand): Conv2d(42, 336, kernel_size=(1, 1), stride=(1, 1))
      )
      (conv_pwl): Conv2d(336, 56, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(56, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shuffle): ChannelShuffle(groups=2)
    )
  )
  (13): Sequential(
    (0): InvertedResidual(
      (conv_pw): Conv2d(112, 448, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_dw): MixedConv2d(
        (0): Conv2d(92, 92, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=92, bias=False)
        (1): Conv2d(89, 89, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=89, bias=False)
        (2): Conv2d(89, 89, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), groups=89, bias=False)
        (3): Conv2d(89, 89, kernel_size=(9, 9), stride=(2, 2), padding=(4, 4), groups=89, bias=False)
        (4): Conv2d(89, 89, kernel_size=(11, 11), stride=(2, 2), padding=(5, 5), groups=89, bias=False)
      )
      (bn2): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SqueezeExcite(
        (conv_reduce): Conv2d(448, 84, kernel_size=(1, 1), stride=(1, 1))
        (conv_expand): Conv2d(84, 448, kernel_size=(1, 1), stride=(1, 1))
      )
      (conv_pwl): Conv2d(448, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (14): Sequential(
    (0): MuxInvertedResidual(
      (split): SplitBlock(ratio=0.50)
      (conv_pw): Conv2d(80, 480, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_dw): Conv2d(480, 480, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=240, bias=False)
      (bn2): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SqueezeExcite(
        (conv_reduce): Conv2d(480, 60, kernel_size=(1, 1), stride=(1, 1))
        (conv_expand): Conv2d(60, 480, kernel_size=(1, 1), stride=(1, 1))
      )
      (conv_pwl): Conv2d(480, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shuffle): ChannelShuffle(groups=2)
    )
  )
  (15): Sequential(
    (0): MuxInvertedResidual(
      (split): SplitBlock(ratio=0.50)
      (conv_pw): Conv2d(80, 480, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_dw): Conv2d(480, 480, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=240, bias=False)
      (bn2): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SqueezeExcite(
        (conv_reduce): Conv2d(480, 60, kernel_size=(1, 1), stride=(1, 1))
        (conv_expand): Conv2d(60, 480, kernel_size=(1, 1), stride=(1, 1))
      )
      (conv_pwl): Conv2d(480, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shuffle): ChannelShuffle(groups=2)
    )
  )
  (16): Sequential(
    (0): MuxInvertedResidual(
      (split): SplitBlock(ratio=0.50)
      (conv_pw): Conv2d(80, 480, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_dw): Conv2d(480, 480, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=240, bias=False)
      (bn2): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SqueezeExcite(
        (conv_reduce): Conv2d(480, 60, kernel_size=(1, 1), stride=(1, 1))
        (conv_expand): Conv2d(60, 480, kernel_size=(1, 1), stride=(1, 1))
      )
      (conv_pwl): Conv2d(480, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shuffle): ChannelShuffle(groups=2)
    )
  )
  (17): Sequential(
    (0): InvertedResidual(
      (conv_pw): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_dw): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SqueezeExcite(
        (conv_reduce): Conv2d(960, 120, kernel_size=(1, 1), stride=(1, 1))
        (conv_expand): Conv2d(120, 960, kernel_size=(1, 1), stride=(1, 1))
      )
      (conv_pwl): Conv2d(960, 200, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(200, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
))
<class 'tuple'> ('conv_head', Conv2d(200, 1280, kernel_size=(1, 1), stride=(1, 1), bias=False))
<class 'tuple'> ('bn2', BatchNorm2d(1280, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True))
<class 'tuple'> ('global_pool', SelectAdaptivePool2d (pool_type=avg, flatten=False))
<class 'tuple'> ('classifier', Linear(in_features=1280, out_features=10, bias=True))
<class 'tuple'> ('0', Sequential(
  (0): DepthwiseSeparableConv(
    (conv_dw): Conv2d(24, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=24, bias=False)
    (bn1): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (se): SqueezeExcite(
      (conv_reduce): Conv2d(24, 6, kernel_size=(1, 1), stride=(1, 1))
      (conv_expand): Conv2d(6, 24, kernel_size=(1, 1), stride=(1, 1))
    )
    (conv_pw): Conv2d(24, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn2): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
))
<class 'tuple'> ('1', Sequential(
  (0): InvertedResidual(
    (conv_pw): Conv2d(24, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv_dw): Conv2d(96, 96, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=96, bias=False)
    (bn2): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (se): SqueezeExcite(
      (conv_reduce): Conv2d(96, 18, kernel_size=(1, 1), stride=(1, 1))
      (conv_expand): Conv2d(18, 96, kernel_size=(1, 1), stride=(1, 1))
    )
    (conv_pwl): Conv2d(96, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn3): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
))
<class 'tuple'> ('2', Sequential(
  (0): MuxInvertedResidual(
    (split): SplitBlock(ratio=0.50)
    (conv_pw): Conv2d(12, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn1): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv_dw): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=24, bias=False)
    (bn2): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (se): SqueezeExcite(
      (conv_reduce): Conv2d(48, 9, kernel_size=(1, 1), stride=(1, 1))
      (conv_expand): Conv2d(9, 48, kernel_size=(1, 1), stride=(1, 1))
    )
    (conv_pwl): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn3): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (shuffle): ChannelShuffle(groups=2)
  )
))
<class 'tuple'> ('3', Sequential(
  (0): MuxInvertedResidual(
    (split): SplitBlock(ratio=0.50)
    (conv_pw): Conv2d(12, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn1): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv_dw): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=24, bias=False)
    (bn2): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (se): SqueezeExcite(
      (conv_reduce): Conv2d(48, 9, kernel_size=(1, 1), stride=(1, 1))
      (conv_expand): Conv2d(9, 48, kernel_size=(1, 1), stride=(1, 1))
    )
    (conv_pwl): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn3): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (shuffle): ChannelShuffle(groups=2)
  )
))
<class 'tuple'> ('4', Sequential(
  (0): InvertedResidual(
    (conv_pw): Conv2d(24, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv_dw): MixedConv2d(
      (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False)
      (1): Conv2d(32, 32, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=32, bias=False)
      (2): Conv2d(32, 32, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), groups=32, bias=False)
    )
    (bn2): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (se): SqueezeExcite(
      (conv_reduce): Conv2d(96, 18, kernel_size=(1, 1), stride=(1, 1))
      (conv_expand): Conv2d(18, 96, kernel_size=(1, 1), stride=(1, 1))
    )
    (conv_pwl): Conv2d(96, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn3): BatchNorm2d(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
))
<class 'tuple'> ('5', Sequential(
  (0): MuxInvertedResidual(
    (split): SplitBlock(ratio=0.50)
    (conv_pw): Conv2d(20, 120, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn1): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv_dw): Conv2d(120, 120, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=60, bias=False)
    (bn2): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (se): SqueezeExcite(
      (conv_reduce): Conv2d(120, 15, kernel_size=(1, 1), stride=(1, 1))
      (conv_expand): Conv2d(15, 120, kernel_size=(1, 1), stride=(1, 1))
    )
    (conv_pwl): Conv2d(120, 20, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn3): BatchNorm2d(20, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (shuffle): ChannelShuffle(groups=2)
  )
))
<class 'tuple'> ('6', Sequential(
  (0): MuxInvertedResidual(
    (split): SplitBlock(ratio=0.50)
    (conv_pw): Conv2d(20, 120, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn1): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv_dw): Conv2d(120, 120, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=60, bias=False)
    (bn2): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (se): SqueezeExcite(
      (conv_reduce): Conv2d(120, 15, kernel_size=(1, 1), stride=(1, 1))
      (conv_expand): Conv2d(15, 120, kernel_size=(1, 1), stride=(1, 1))
    )
    (conv_pwl): Conv2d(120, 20, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn3): BatchNorm2d(20, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (shuffle): ChannelShuffle(groups=2)
  )
))
<class 'tuple'> ('7', Sequential(
  (0): InvertedResidual(
    (conv_pw): Conv2d(40, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv_dw): MixedConv2d(
      (0): Conv2d(40, 40, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=40, bias=False)
      (1): Conv2d(40, 40, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=40, bias=False)
      (2): Conv2d(40, 40, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), groups=40, bias=False)
      (3): Conv2d(40, 40, kernel_size=(9, 9), stride=(2, 2), padding=(4, 4), groups=40, bias=False)
    )
    (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (se): SqueezeExcite(
      (conv_reduce): Conv2d(160, 30, kernel_size=(1, 1), stride=(1, 1))
      (conv_expand): Conv2d(30, 160, kernel_size=(1, 1), stride=(1, 1))
    )
    (conv_pwl): Conv2d(160, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn3): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
))
<class 'tuple'> ('8', Sequential(
  (0): MuxInvertedResidual(
    (split): SplitBlock(ratio=0.50)
    (conv_pw): Conv2d(40, 240, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn1): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv_dw): Conv2d(240, 240, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=120, bias=False)
    (bn2): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (se): SqueezeExcite(
      (conv_reduce): Conv2d(240, 30, kernel_size=(1, 1), stride=(1, 1))
      (conv_expand): Conv2d(30, 240, kernel_size=(1, 1), stride=(1, 1))
    )
    (conv_pwl): Conv2d(240, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn3): BatchNorm2d(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (shuffle): ChannelShuffle(groups=2)
  )
))
<class 'tuple'> ('9', Sequential(
  (0): MuxInvertedResidual(
    (split): SplitBlock(ratio=0.50)
    (conv_pw): Conv2d(40, 240, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn1): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv_dw): Conv2d(240, 240, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=120, bias=False)
    (bn2): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (se): SqueezeExcite(
      (conv_reduce): Conv2d(240, 30, kernel_size=(1, 1), stride=(1, 1))
      (conv_expand): Conv2d(30, 240, kernel_size=(1, 1), stride=(1, 1))
    )
    (conv_pwl): Conv2d(240, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn3): BatchNorm2d(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (shuffle): ChannelShuffle(groups=2)
  )
))
<class 'tuple'> ('10', Sequential(
  (0): InvertedResidual(
    (conv_pw): Conv2d(80, 480, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv_dw): Conv2d(480, 480, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=480, bias=False)
    (bn2): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (se): SqueezeExcite(
      (conv_reduce): Conv2d(480, 60, kernel_size=(1, 1), stride=(1, 1))
      (conv_expand): Conv2d(60, 480, kernel_size=(1, 1), stride=(1, 1))
    )
    (conv_pwl): Conv2d(480, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn3): BatchNorm2d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
))
<class 'tuple'> ('11', Sequential(
  (0): MuxInvertedResidual(
    (split): SplitBlock(ratio=0.50)
    (conv_pw): Conv2d(56, 336, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn1): BatchNorm2d(336, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv_dw): Conv2d(336, 336, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=168, bias=False)
    (bn2): BatchNorm2d(336, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (se): SqueezeExcite(
      (conv_reduce): Conv2d(336, 42, kernel_size=(1, 1), stride=(1, 1))
      (conv_expand): Conv2d(42, 336, kernel_size=(1, 1), stride=(1, 1))
    )
    (conv_pwl): Conv2d(336, 56, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn3): BatchNorm2d(56, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (shuffle): ChannelShuffle(groups=2)
  )
))
<class 'tuple'> ('12', Sequential(
  (0): MuxInvertedResidual(
    (split): SplitBlock(ratio=0.50)
    (conv_pw): Conv2d(56, 336, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn1): BatchNorm2d(336, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv_dw): Conv2d(336, 336, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=168, bias=False)
    (bn2): BatchNorm2d(336, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (se): SqueezeExcite(
      (conv_reduce): Conv2d(336, 42, kernel_size=(1, 1), stride=(1, 1))
      (conv_expand): Conv2d(42, 336, kernel_size=(1, 1), stride=(1, 1))
    )
    (conv_pwl): Conv2d(336, 56, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn3): BatchNorm2d(56, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (shuffle): ChannelShuffle(groups=2)
  )
))
<class 'tuple'> ('13', Sequential(
  (0): InvertedResidual(
    (conv_pw): Conv2d(112, 448, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv_dw): MixedConv2d(
      (0): Conv2d(92, 92, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=92, bias=False)
      (1): Conv2d(89, 89, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=89, bias=False)
      (2): Conv2d(89, 89, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), groups=89, bias=False)
      (3): Conv2d(89, 89, kernel_size=(9, 9), stride=(2, 2), padding=(4, 4), groups=89, bias=False)
      (4): Conv2d(89, 89, kernel_size=(11, 11), stride=(2, 2), padding=(5, 5), groups=89, bias=False)
    )
    (bn2): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (se): SqueezeExcite(
      (conv_reduce): Conv2d(448, 84, kernel_size=(1, 1), stride=(1, 1))
      (conv_expand): Conv2d(84, 448, kernel_size=(1, 1), stride=(1, 1))
    )
    (conv_pwl): Conv2d(448, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
))
<class 'tuple'> ('14', Sequential(
  (0): MuxInvertedResidual(
    (split): SplitBlock(ratio=0.50)
    (conv_pw): Conv2d(80, 480, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv_dw): Conv2d(480, 480, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=240, bias=False)
    (bn2): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (se): SqueezeExcite(
      (conv_reduce): Conv2d(480, 60, kernel_size=(1, 1), stride=(1, 1))
      (conv_expand): Conv2d(60, 480, kernel_size=(1, 1), stride=(1, 1))
    )
    (conv_pwl): Conv2d(480, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn3): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (shuffle): ChannelShuffle(groups=2)
  )
))
<class 'tuple'> ('15', Sequential(
  (0): MuxInvertedResidual(
    (split): SplitBlock(ratio=0.50)
    (conv_pw): Conv2d(80, 480, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv_dw): Conv2d(480, 480, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=240, bias=False)
    (bn2): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (se): SqueezeExcite(
      (conv_reduce): Conv2d(480, 60, kernel_size=(1, 1), stride=(1, 1))
      (conv_expand): Conv2d(60, 480, kernel_size=(1, 1), stride=(1, 1))
    )
    (conv_pwl): Conv2d(480, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn3): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (shuffle): ChannelShuffle(groups=2)
  )
))
<class 'tuple'> ('16', Sequential(
  (0): MuxInvertedResidual(
    (split): SplitBlock(ratio=0.50)
    (conv_pw): Conv2d(80, 480, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv_dw): Conv2d(480, 480, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=240, bias=False)
    (bn2): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (se): SqueezeExcite(
      (conv_reduce): Conv2d(480, 60, kernel_size=(1, 1), stride=(1, 1))
      (conv_expand): Conv2d(60, 480, kernel_size=(1, 1), stride=(1, 1))
    )
    (conv_pwl): Conv2d(480, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn3): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (shuffle): ChannelShuffle(groups=2)
  )
))
<class 'tuple'> ('17', Sequential(
  (0): InvertedResidual(
    (conv_pw): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv_dw): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
    (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (se): SqueezeExcite(
      (conv_reduce): Conv2d(960, 120, kernel_size=(1, 1), stride=(1, 1))
      (conv_expand): Conv2d(120, 960, kernel_size=(1, 1), stride=(1, 1))
    )
    (conv_pwl): Conv2d(960, 200, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn3): BatchNorm2d(200, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
))
<class 'tuple'> ('0', Sequential(
  (0): DepthwiseSeparableConv(
    (conv_dw): Conv2d(24, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=24, bias=False)
    (bn1): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (se): SqueezeExcite(
      (conv_reduce): Conv2d(24, 6, kernel_size=(1, 1), stride=(1, 1))
      (conv_expand): Conv2d(6, 24, kernel_size=(1, 1), stride=(1, 1))
    )
    (conv_pw): Conv2d(24, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn2): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
))
<class 'tuple'> ('1', Sequential(
  (0): InvertedResidual(
    (conv_pw): Conv2d(24, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv_dw): Conv2d(96, 96, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=96, bias=False)
    (bn2): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (se): SqueezeExcite(
      (conv_reduce): Conv2d(96, 18, kernel_size=(1, 1), stride=(1, 1))
      (conv_expand): Conv2d(18, 96, kernel_size=(1, 1), stride=(1, 1))
    )
    (conv_pwl): Conv2d(96, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn3): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
))
<class 'tuple'> ('2', Sequential(
  (0): MuxInvertedResidual(
    (split): SplitBlock(ratio=0.50)
    (conv_pw): Conv2d(12, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn1): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv_dw): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=24, bias=False)
    (bn2): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (se): SqueezeExcite(
      (conv_reduce): Conv2d(48, 9, kernel_size=(1, 1), stride=(1, 1))
      (conv_expand): Conv2d(9, 48, kernel_size=(1, 1), stride=(1, 1))
    )
    (conv_pwl): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn3): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (shuffle): ChannelShuffle(groups=2)
  )
))
<class 'tuple'> ('3', Sequential(
  (0): MuxInvertedResidual(
    (split): SplitBlock(ratio=0.50)
    (conv_pw): Conv2d(12, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn1): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv_dw): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=24, bias=False)
    (bn2): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (se): SqueezeExcite(
      (conv_reduce): Conv2d(48, 9, kernel_size=(1, 1), stride=(1, 1))
      (conv_expand): Conv2d(9, 48, kernel_size=(1, 1), stride=(1, 1))
    )
    (conv_pwl): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn3): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (shuffle): ChannelShuffle(groups=2)
  )
))
<class 'tuple'> ('4', Sequential(
  (0): InvertedResidual(
    (conv_pw): Conv2d(24, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv_dw): MixedConv2d(
      (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False)
      (1): Conv2d(32, 32, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=32, bias=False)
      (2): Conv2d(32, 32, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), groups=32, bias=False)
    )
    (bn2): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (se): SqueezeExcite(
      (conv_reduce): Conv2d(96, 18, kernel_size=(1, 1), stride=(1, 1))
      (conv_expand): Conv2d(18, 96, kernel_size=(1, 1), stride=(1, 1))
    )
    (conv_pwl): Conv2d(96, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn3): BatchNorm2d(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
))
<class 'tuple'> ('5', Sequential(
  (0): MuxInvertedResidual(
    (split): SplitBlock(ratio=0.50)
    (conv_pw): Conv2d(20, 120, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn1): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv_dw): Conv2d(120, 120, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=60, bias=False)
    (bn2): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (se): SqueezeExcite(
      (conv_reduce): Conv2d(120, 15, kernel_size=(1, 1), stride=(1, 1))
      (conv_expand): Conv2d(15, 120, kernel_size=(1, 1), stride=(1, 1))
    )
    (conv_pwl): Conv2d(120, 20, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn3): BatchNorm2d(20, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (shuffle): ChannelShuffle(groups=2)
  )
))
<class 'tuple'> ('6', Sequential(
  (0): MuxInvertedResidual(
    (split): SplitBlock(ratio=0.50)
    (conv_pw): Conv2d(20, 120, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn1): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv_dw): Conv2d(120, 120, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=60, bias=False)
    (bn2): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (se): SqueezeExcite(
      (conv_reduce): Conv2d(120, 15, kernel_size=(1, 1), stride=(1, 1))
      (conv_expand): Conv2d(15, 120, kernel_size=(1, 1), stride=(1, 1))
    )
    (conv_pwl): Conv2d(120, 20, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn3): BatchNorm2d(20, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (shuffle): ChannelShuffle(groups=2)
  )
))
<class 'tuple'> ('7', Sequential(
  (0): InvertedResidual(
    (conv_pw): Conv2d(40, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv_dw): MixedConv2d(
      (0): Conv2d(40, 40, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=40, bias=False)
      (1): Conv2d(40, 40, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=40, bias=False)
      (2): Conv2d(40, 40, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), groups=40, bias=False)
      (3): Conv2d(40, 40, kernel_size=(9, 9), stride=(2, 2), padding=(4, 4), groups=40, bias=False)
    )
    (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (se): SqueezeExcite(
      (conv_reduce): Conv2d(160, 30, kernel_size=(1, 1), stride=(1, 1))
      (conv_expand): Conv2d(30, 160, kernel_size=(1, 1), stride=(1, 1))
    )
    (conv_pwl): Conv2d(160, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn3): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
))
<class 'tuple'> ('8', Sequential(
  (0): MuxInvertedResidual(
    (split): SplitBlock(ratio=0.50)
    (conv_pw): Conv2d(40, 240, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn1): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv_dw): Conv2d(240, 240, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=120, bias=False)
    (bn2): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (se): SqueezeExcite(
      (conv_reduce): Conv2d(240, 30, kernel_size=(1, 1), stride=(1, 1))
      (conv_expand): Conv2d(30, 240, kernel_size=(1, 1), stride=(1, 1))
    )
    (conv_pwl): Conv2d(240, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn3): BatchNorm2d(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (shuffle): ChannelShuffle(groups=2)
  )
))
<class 'tuple'> ('9', Sequential(
  (0): MuxInvertedResidual(
    (split): SplitBlock(ratio=0.50)
    (conv_pw): Conv2d(40, 240, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn1): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv_dw): Conv2d(240, 240, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=120, bias=False)
    (bn2): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (se): SqueezeExcite(
      (conv_reduce): Conv2d(240, 30, kernel_size=(1, 1), stride=(1, 1))
      (conv_expand): Conv2d(30, 240, kernel_size=(1, 1), stride=(1, 1))
    )
    (conv_pwl): Conv2d(240, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn3): BatchNorm2d(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (shuffle): ChannelShuffle(groups=2)
  )
))
<class 'tuple'> ('10', Sequential(
  (0): InvertedResidual(
    (conv_pw): Conv2d(80, 480, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv_dw): Conv2d(480, 480, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=480, bias=False)
    (bn2): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (se): SqueezeExcite(
      (conv_reduce): Conv2d(480, 60, kernel_size=(1, 1), stride=(1, 1))
      (conv_expand): Conv2d(60, 480, kernel_size=(1, 1), stride=(1, 1))
    )
    (conv_pwl): Conv2d(480, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn3): BatchNorm2d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
))
<class 'tuple'> ('11', Sequential(
  (0): MuxInvertedResidual(
    (split): SplitBlock(ratio=0.50)
    (conv_pw): Conv2d(56, 336, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn1): BatchNorm2d(336, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv_dw): Conv2d(336, 336, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=168, bias=False)
    (bn2): BatchNorm2d(336, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (se): SqueezeExcite(
      (conv_reduce): Conv2d(336, 42, kernel_size=(1, 1), stride=(1, 1))
      (conv_expand): Conv2d(42, 336, kernel_size=(1, 1), stride=(1, 1))
    )
    (conv_pwl): Conv2d(336, 56, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn3): BatchNorm2d(56, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (shuffle): ChannelShuffle(groups=2)
  )
))
<class 'tuple'> ('12', Sequential(
  (0): MuxInvertedResidual(
    (split): SplitBlock(ratio=0.50)
    (conv_pw): Conv2d(56, 336, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn1): BatchNorm2d(336, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv_dw): Conv2d(336, 336, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=168, bias=False)
    (bn2): BatchNorm2d(336, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (se): SqueezeExcite(
      (conv_reduce): Conv2d(336, 42, kernel_size=(1, 1), stride=(1, 1))
      (conv_expand): Conv2d(42, 336, kernel_size=(1, 1), stride=(1, 1))
    )
    (conv_pwl): Conv2d(336, 56, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn3): BatchNorm2d(56, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (shuffle): ChannelShuffle(groups=2)
  )
))
<class 'tuple'> ('13', Sequential(
  (0): InvertedResidual(
    (conv_pw): Conv2d(112, 448, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv_dw): MixedConv2d(
      (0): Conv2d(92, 92, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=92, bias=False)
      (1): Conv2d(89, 89, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=89, bias=False)
      (2): Conv2d(89, 89, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), groups=89, bias=False)
      (3): Conv2d(89, 89, kernel_size=(9, 9), stride=(2, 2), padding=(4, 4), groups=89, bias=False)
      (4): Conv2d(89, 89, kernel_size=(11, 11), stride=(2, 2), padding=(5, 5), groups=89, bias=False)
    )
    (bn2): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (se): SqueezeExcite(
      (conv_reduce): Conv2d(448, 84, kernel_size=(1, 1), stride=(1, 1))
      (conv_expand): Conv2d(84, 448, kernel_size=(1, 1), stride=(1, 1))
    )
    (conv_pwl): Conv2d(448, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
))
<class 'tuple'> ('14', Sequential(
  (0): MuxInvertedResidual(
    (split): SplitBlock(ratio=0.50)
    (conv_pw): Conv2d(80, 480, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv_dw): Conv2d(480, 480, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=240, bias=False)
    (bn2): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (se): SqueezeExcite(
      (conv_reduce): Conv2d(480, 60, kernel_size=(1, 1), stride=(1, 1))
      (conv_expand): Conv2d(60, 480, kernel_size=(1, 1), stride=(1, 1))
    )
    (conv_pwl): Conv2d(480, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn3): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (shuffle): ChannelShuffle(groups=2)
  )
))
<class 'tuple'> ('15', Sequential(
  (0): MuxInvertedResidual(
    (split): SplitBlock(ratio=0.50)
    (conv_pw): Conv2d(80, 480, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv_dw): Conv2d(480, 480, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=240, bias=False)
    (bn2): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (se): SqueezeExcite(
      (conv_reduce): Conv2d(480, 60, kernel_size=(1, 1), stride=(1, 1))
      (conv_expand): Conv2d(60, 480, kernel_size=(1, 1), stride=(1, 1))
    )
    (conv_pwl): Conv2d(480, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn3): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (shuffle): ChannelShuffle(groups=2)
  )
))
<class 'tuple'> ('16', Sequential(
  (0): MuxInvertedResidual(
    (split): SplitBlock(ratio=0.50)
    (conv_pw): Conv2d(80, 480, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv_dw): Conv2d(480, 480, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=240, bias=False)
    (bn2): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (se): SqueezeExcite(
      (conv_reduce): Conv2d(480, 60, kernel_size=(1, 1), stride=(1, 1))
      (conv_expand): Conv2d(60, 480, kernel_size=(1, 1), stride=(1, 1))
    )
    (conv_pwl): Conv2d(480, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn3): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (shuffle): ChannelShuffle(groups=2)
  )
))
<class 'tuple'> ('17', Sequential(
  (0): InvertedResidual(
    (conv_pw): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv_dw): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
    (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (se): SqueezeExcite(
      (conv_reduce): Conv2d(960, 120, kernel_size=(1, 1), stride=(1, 1))
      (conv_expand): Conv2d(120, 960, kernel_size=(1, 1), stride=(1, 1))
    )
    (conv_pwl): Conv2d(960, 200, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn3): BatchNorm2d(200, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
))
<class 'tuple'> ('0', Sequential(
  (0): DepthwiseSeparableConv(
    (conv_dw): Conv2d(24, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=24, bias=False)
    (bn1): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (se): SqueezeExcite(
      (conv_reduce): Conv2d(24, 6, kernel_size=(1, 1), stride=(1, 1))
      (conv_expand): Conv2d(6, 24, kernel_size=(1, 1), stride=(1, 1))
    )
    (conv_pw): Conv2d(24, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn2): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
))
<class 'tuple'> ('1', Sequential(
  (0): InvertedResidual(
    (conv_pw): Conv2d(24, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv_dw): Conv2d(96, 96, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=96, bias=False)
    (bn2): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (se): SqueezeExcite(
      (conv_reduce): Conv2d(96, 18, kernel_size=(1, 1), stride=(1, 1))
      (conv_expand): Conv2d(18, 96, kernel_size=(1, 1), stride=(1, 1))
    )
    (conv_pwl): Conv2d(96, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn3): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
))
<class 'tuple'> ('2', Sequential(
  (0): MuxInvertedResidual(
    (split): SplitBlock(ratio=0.50)
    (conv_pw): Conv2d(12, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn1): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv_dw): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=24, bias=False)
    (bn2): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (se): SqueezeExcite(
      (conv_reduce): Conv2d(48, 9, kernel_size=(1, 1), stride=(1, 1))
      (conv_expand): Conv2d(9, 48, kernel_size=(1, 1), stride=(1, 1))
    )
    (conv_pwl): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn3): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (shuffle): ChannelShuffle(groups=2)
  )
))
<class 'tuple'> ('3', Sequential(
  (0): MuxInvertedResidual(
    (split): SplitBlock(ratio=0.50)
    (conv_pw): Conv2d(12, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn1): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv_dw): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=24, bias=False)
    (bn2): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (se): SqueezeExcite(
      (conv_reduce): Conv2d(48, 9, kernel_size=(1, 1), stride=(1, 1))
      (conv_expand): Conv2d(9, 48, kernel_size=(1, 1), stride=(1, 1))
    )
    (conv_pwl): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn3): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (shuffle): ChannelShuffle(groups=2)
  )
))
<class 'tuple'> ('4', Sequential(
  (0): InvertedResidual(
    (conv_pw): Conv2d(24, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv_dw): MixedConv2d(
      (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False)
      (1): Conv2d(32, 32, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=32, bias=False)
      (2): Conv2d(32, 32, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), groups=32, bias=False)
    )
    (bn2): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (se): SqueezeExcite(
      (conv_reduce): Conv2d(96, 18, kernel_size=(1, 1), stride=(1, 1))
      (conv_expand): Conv2d(18, 96, kernel_size=(1, 1), stride=(1, 1))
    )
    (conv_pwl): Conv2d(96, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn3): BatchNorm2d(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
))
<class 'tuple'> ('5', Sequential(
  (0): MuxInvertedResidual(
    (split): SplitBlock(ratio=0.50)
    (conv_pw): Conv2d(20, 120, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn1): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv_dw): Conv2d(120, 120, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=60, bias=False)
    (bn2): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (se): SqueezeExcite(
      (conv_reduce): Conv2d(120, 15, kernel_size=(1, 1), stride=(1, 1))
      (conv_expand): Conv2d(15, 120, kernel_size=(1, 1), stride=(1, 1))
    )
    (conv_pwl): Conv2d(120, 20, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn3): BatchNorm2d(20, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (shuffle): ChannelShuffle(groups=2)
  )
))
<class 'tuple'> ('6', Sequential(
  (0): MuxInvertedResidual(
    (split): SplitBlock(ratio=0.50)
    (conv_pw): Conv2d(20, 120, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn1): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv_dw): Conv2d(120, 120, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=60, bias=False)
    (bn2): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (se): SqueezeExcite(
      (conv_reduce): Conv2d(120, 15, kernel_size=(1, 1), stride=(1, 1))
      (conv_expand): Conv2d(15, 120, kernel_size=(1, 1), stride=(1, 1))
    )
    (conv_pwl): Conv2d(120, 20, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn3): BatchNorm2d(20, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (shuffle): ChannelShuffle(groups=2)
  )
))
<class 'tuple'> ('7', Sequential(
  (0): InvertedResidual(
    (conv_pw): Conv2d(40, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv_dw): MixedConv2d(
      (0): Conv2d(40, 40, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=40, bias=False)
      (1): Conv2d(40, 40, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=40, bias=False)
      (2): Conv2d(40, 40, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), groups=40, bias=False)
      (3): Conv2d(40, 40, kernel_size=(9, 9), stride=(2, 2), padding=(4, 4), groups=40, bias=False)
    )
    (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (se): SqueezeExcite(
      (conv_reduce): Conv2d(160, 30, kernel_size=(1, 1), stride=(1, 1))
      (conv_expand): Conv2d(30, 160, kernel_size=(1, 1), stride=(1, 1))
    )
    (conv_pwl): Conv2d(160, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn3): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
))
<class 'tuple'> ('8', Sequential(
  (0): MuxInvertedResidual(
    (split): SplitBlock(ratio=0.50)
    (conv_pw): Conv2d(40, 240, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn1): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv_dw): Conv2d(240, 240, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=120, bias=False)
    (bn2): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (se): SqueezeExcite(
      (conv_reduce): Conv2d(240, 30, kernel_size=(1, 1), stride=(1, 1))
      (conv_expand): Conv2d(30, 240, kernel_size=(1, 1), stride=(1, 1))
    )
    (conv_pwl): Conv2d(240, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn3): BatchNorm2d(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (shuffle): ChannelShuffle(groups=2)
  )
))
<class 'tuple'> ('9', Sequential(
  (0): MuxInvertedResidual(
    (split): SplitBlock(ratio=0.50)
    (conv_pw): Conv2d(40, 240, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn1): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv_dw): Conv2d(240, 240, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=120, bias=False)
    (bn2): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (se): SqueezeExcite(
      (conv_reduce): Conv2d(240, 30, kernel_size=(1, 1), stride=(1, 1))
      (conv_expand): Conv2d(30, 240, kernel_size=(1, 1), stride=(1, 1))
    )
    (conv_pwl): Conv2d(240, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn3): BatchNorm2d(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (shuffle): ChannelShuffle(groups=2)
  )
))
<class 'tuple'> ('10', Sequential(
  (0): InvertedResidual(
    (conv_pw): Conv2d(80, 480, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv_dw): Conv2d(480, 480, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=480, bias=False)
    (bn2): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (se): SqueezeExcite(
      (conv_reduce): Conv2d(480, 60, kernel_size=(1, 1), stride=(1, 1))
      (conv_expand): Conv2d(60, 480, kernel_size=(1, 1), stride=(1, 1))
    )
    (conv_pwl): Conv2d(480, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn3): BatchNorm2d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
))
<class 'tuple'> ('11', Sequential(
  (0): MuxInvertedResidual(
    (split): SplitBlock(ratio=0.50)
    (conv_pw): Conv2d(56, 336, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn1): BatchNorm2d(336, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv_dw): Conv2d(336, 336, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=168, bias=False)
    (bn2): BatchNorm2d(336, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (se): SqueezeExcite(
      (conv_reduce): Conv2d(336, 42, kernel_size=(1, 1), stride=(1, 1))
      (conv_expand): Conv2d(42, 336, kernel_size=(1, 1), stride=(1, 1))
    )
    (conv_pwl): Conv2d(336, 56, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn3): BatchNorm2d(56, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (shuffle): ChannelShuffle(groups=2)
  )
))
<class 'tuple'> ('12', Sequential(
  (0): MuxInvertedResidual(
    (split): SplitBlock(ratio=0.50)
    (conv_pw): Conv2d(56, 336, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn1): BatchNorm2d(336, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv_dw): Conv2d(336, 336, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=168, bias=False)
    (bn2): BatchNorm2d(336, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (se): SqueezeExcite(
      (conv_reduce): Conv2d(336, 42, kernel_size=(1, 1), stride=(1, 1))
      (conv_expand): Conv2d(42, 336, kernel_size=(1, 1), stride=(1, 1))
    )
    (conv_pwl): Conv2d(336, 56, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn3): BatchNorm2d(56, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (shuffle): ChannelShuffle(groups=2)
  )
))
<class 'tuple'> ('13', Sequential(
  (0): InvertedResidual(
    (conv_pw): Conv2d(112, 448, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv_dw): MixedConv2d(
      (0): Conv2d(92, 92, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=92, bias=False)
      (1): Conv2d(89, 89, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=89, bias=False)
      (2): Conv2d(89, 89, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), groups=89, bias=False)
      (3): Conv2d(89, 89, kernel_size=(9, 9), stride=(2, 2), padding=(4, 4), groups=89, bias=False)
      (4): Conv2d(89, 89, kernel_size=(11, 11), stride=(2, 2), padding=(5, 5), groups=89, bias=False)
    )
    (bn2): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (se): SqueezeExcite(
      (conv_reduce): Conv2d(448, 84, kernel_size=(1, 1), stride=(1, 1))
      (conv_expand): Conv2d(84, 448, kernel_size=(1, 1), stride=(1, 1))
    )
    (conv_pwl): Conv2d(448, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
))
<class 'tuple'> ('14', Sequential(
  (0): MuxInvertedResidual(
    (split): SplitBlock(ratio=0.50)
    (conv_pw): Conv2d(80, 480, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv_dw): Conv2d(480, 480, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=240, bias=False)
    (bn2): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (se): SqueezeExcite(
      (conv_reduce): Conv2d(480, 60, kernel_size=(1, 1), stride=(1, 1))
      (conv_expand): Conv2d(60, 480, kernel_size=(1, 1), stride=(1, 1))
    )
    (conv_pwl): Conv2d(480, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn3): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (shuffle): ChannelShuffle(groups=2)
  )
))
<class 'tuple'> ('15', Sequential(
  (0): MuxInvertedResidual(
    (split): SplitBlock(ratio=0.50)
    (conv_pw): Conv2d(80, 480, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv_dw): Conv2d(480, 480, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=240, bias=False)
    (bn2): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (se): SqueezeExcite(
      (conv_reduce): Conv2d(480, 60, kernel_size=(1, 1), stride=(1, 1))
      (conv_expand): Conv2d(60, 480, kernel_size=(1, 1), stride=(1, 1))
    )
    (conv_pwl): Conv2d(480, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn3): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (shuffle): ChannelShuffle(groups=2)
  )
))
<class 'tuple'> ('16', Sequential(
  (0): MuxInvertedResidual(
    (split): SplitBlock(ratio=0.50)
    (conv_pw): Conv2d(80, 480, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv_dw): Conv2d(480, 480, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=240, bias=False)
    (bn2): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (se): SqueezeExcite(
      (conv_reduce): Conv2d(480, 60, kernel_size=(1, 1), stride=(1, 1))
      (conv_expand): Conv2d(60, 480, kernel_size=(1, 1), stride=(1, 1))
    )
    (conv_pwl): Conv2d(480, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn3): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (shuffle): ChannelShuffle(groups=2)
  )
))
<class 'tuple'> ('17', Sequential(
  (0): InvertedResidual(
    (conv_pw): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv_dw): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
    (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (se): SqueezeExcite(
      (conv_reduce): Conv2d(960, 120, kernel_size=(1, 1), stride=(1, 1))
      (conv_expand): Conv2d(120, 960, kernel_size=(1, 1), stride=(1, 1))
    )
    (conv_pwl): Conv2d(960, 200, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn3): BatchNorm2d(200, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
))
front
Sequential(
  (0): Sequential(
    (conv_stem): Conv2d(3, 24, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
  )
  (1): Sequential(
    (0): Sequential(
      (0): DepthwiseSeparableConv(
        (conv_dw): Conv2d(24, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=24, bias=False)
        (bn1): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (se): SqueezeExcite(
          (conv_reduce): Conv2d(24, 6, kernel_size=(1, 1), stride=(1, 1))
          (conv_expand): Conv2d(6, 24, kernel_size=(1, 1), stride=(1, 1))
        )
        (conv_pw): Conv2d(24, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn2): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): Sequential(
      (0): InvertedResidual(
        (conv_pw): Conv2d(24, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv_dw): Conv2d(96, 96, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=96, bias=False)
        (bn2): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (se): SqueezeExcite(
          (conv_reduce): Conv2d(96, 18, kernel_size=(1, 1), stride=(1, 1))
          (conv_expand): Conv2d(18, 96, kernel_size=(1, 1), stride=(1, 1))
        )
        (conv_pwl): Conv2d(96, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (2): Sequential(
      (0): MuxInvertedResidual(
        (split): SplitBlock(ratio=0.50)
        (conv_pw): Conv2d(12, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv_dw): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=24, bias=False)
        (bn2): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (se): SqueezeExcite(
          (conv_reduce): Conv2d(48, 9, kernel_size=(1, 1), stride=(1, 1))
          (conv_expand): Conv2d(9, 48, kernel_size=(1, 1), stride=(1, 1))
        )
        (conv_pwl): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (shuffle): ChannelShuffle(groups=2)
      )
    )
    (3): Sequential(
      (0): MuxInvertedResidual(
        (split): SplitBlock(ratio=0.50)
        (conv_pw): Conv2d(12, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv_dw): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=24, bias=False)
        (bn2): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (se): SqueezeExcite(
          (conv_reduce): Conv2d(48, 9, kernel_size=(1, 1), stride=(1, 1))
          (conv_expand): Conv2d(9, 48, kernel_size=(1, 1), stride=(1, 1))
        )
        (conv_pwl): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (shuffle): ChannelShuffle(groups=2)
      )
    )
    (4): Sequential(
      (0): InvertedResidual(
        (conv_pw): Conv2d(24, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv_dw): MixedConv2d(
          (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False)
          (1): Conv2d(32, 32, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=32, bias=False)
          (2): Conv2d(32, 32, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), groups=32, bias=False)
        )
        (bn2): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (se): SqueezeExcite(
          (conv_reduce): Conv2d(96, 18, kernel_size=(1, 1), stride=(1, 1))
          (conv_expand): Conv2d(18, 96, kernel_size=(1, 1), stride=(1, 1))
        )
        (conv_pwl): Conv2d(96, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (5): Sequential(
      (0): MuxInvertedResidual(
        (split): SplitBlock(ratio=0.50)
        (conv_pw): Conv2d(20, 120, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv_dw): Conv2d(120, 120, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=60, bias=False)
        (bn2): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (se): SqueezeExcite(
          (conv_reduce): Conv2d(120, 15, kernel_size=(1, 1), stride=(1, 1))
          (conv_expand): Conv2d(15, 120, kernel_size=(1, 1), stride=(1, 1))
        )
        (conv_pwl): Conv2d(120, 20, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(20, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (shuffle): ChannelShuffle(groups=2)
      )
    )
    (6): Sequential(
      (0): MuxInvertedResidual(
        (split): SplitBlock(ratio=0.50)
        (conv_pw): Conv2d(20, 120, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv_dw): Conv2d(120, 120, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=60, bias=False)
        (bn2): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (se): SqueezeExcite(
          (conv_reduce): Conv2d(120, 15, kernel_size=(1, 1), stride=(1, 1))
          (conv_expand): Conv2d(15, 120, kernel_size=(1, 1), stride=(1, 1))
        )
        (conv_pwl): Conv2d(120, 20, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(20, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (shuffle): ChannelShuffle(groups=2)
      )
    )
    (7): Sequential(
      (0): InvertedResidual(
        (conv_pw): Conv2d(40, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv_dw): MixedConv2d(
          (0): Conv2d(40, 40, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=40, bias=False)
          (1): Conv2d(40, 40, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=40, bias=False)
          (2): Conv2d(40, 40, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), groups=40, bias=False)
          (3): Conv2d(40, 40, kernel_size=(9, 9), stride=(2, 2), padding=(4, 4), groups=40, bias=False)
        )
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (se): SqueezeExcite(
          (conv_reduce): Conv2d(160, 30, kernel_size=(1, 1), stride=(1, 1))
          (conv_expand): Conv2d(30, 160, kernel_size=(1, 1), stride=(1, 1))
        )
        (conv_pwl): Conv2d(160, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (8): Sequential(
      (0): MuxInvertedResidual(
        (split): SplitBlock(ratio=0.50)
        (conv_pw): Conv2d(40, 240, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv_dw): Conv2d(240, 240, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=120, bias=False)
        (bn2): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (se): SqueezeExcite(
          (conv_reduce): Conv2d(240, 30, kernel_size=(1, 1), stride=(1, 1))
          (conv_expand): Conv2d(30, 240, kernel_size=(1, 1), stride=(1, 1))
        )
        (conv_pwl): Conv2d(240, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (shuffle): ChannelShuffle(groups=2)
      )
    )
    (9): Sequential(
      (0): MuxInvertedResidual(
        (split): SplitBlock(ratio=0.50)
        (conv_pw): Conv2d(40, 240, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv_dw): Conv2d(240, 240, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=120, bias=False)
        (bn2): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (se): SqueezeExcite(
          (conv_reduce): Conv2d(240, 30, kernel_size=(1, 1), stride=(1, 1))
          (conv_expand): Conv2d(30, 240, kernel_size=(1, 1), stride=(1, 1))
        )
        (conv_pwl): Conv2d(240, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (shuffle): ChannelShuffle(groups=2)
      )
    )
  )
)
----------------------------------------------------------------
        Layer (type)               Output Shape         Param #
================================================================
            Conv2d-1           [-1, 24, 16, 16]             648
            Conv2d-2           [-1, 24, 16, 16]             216
       BatchNorm2d-3           [-1, 24, 16, 16]              48
            Conv2d-4              [-1, 6, 1, 1]             150
            Conv2d-5             [-1, 24, 1, 1]             168
     SqueezeExcite-6           [-1, 24, 16, 16]               0
            Conv2d-7           [-1, 24, 16, 16]             576
       BatchNorm2d-8           [-1, 24, 16, 16]              48
DepthwiseSeparableConv-9           [-1, 24, 16, 16]               0
           Conv2d-10           [-1, 96, 16, 16]           2,304
      BatchNorm2d-11           [-1, 96, 16, 16]             192
           Conv2d-12             [-1, 96, 8, 8]             864
      BatchNorm2d-13             [-1, 96, 8, 8]             192
           Conv2d-14             [-1, 18, 1, 1]           1,746
           Conv2d-15             [-1, 96, 1, 1]           1,824
    SqueezeExcite-16             [-1, 96, 8, 8]               0
           Conv2d-17             [-1, 24, 8, 8]           2,304
      BatchNorm2d-18             [-1, 24, 8, 8]              48
 InvertedResidual-19             [-1, 24, 8, 8]               0
       SplitBlock-20  [[-1, 12, 8, 8], [-1, 12, 8, 8]]               0
           Conv2d-21             [-1, 48, 8, 8]             576
      BatchNorm2d-22             [-1, 48, 8, 8]              96
           Conv2d-23             [-1, 48, 8, 8]             864
      BatchNorm2d-24             [-1, 48, 8, 8]              96
           Conv2d-25              [-1, 9, 1, 1]             441
           Conv2d-26             [-1, 48, 1, 1]             480
    SqueezeExcite-27             [-1, 48, 8, 8]               0
           Conv2d-28             [-1, 12, 8, 8]             576
      BatchNorm2d-29             [-1, 12, 8, 8]              24
   ChannelShuffle-30             [-1, 24, 8, 8]               0
MuxInvertedResidual-31             [-1, 24, 8, 8]               0
       SplitBlock-32  [[-1, 12, 8, 8], [-1, 12, 8, 8]]               0
           Conv2d-33             [-1, 48, 8, 8]             576
      BatchNorm2d-34             [-1, 48, 8, 8]              96
           Conv2d-35             [-1, 48, 8, 8]             864
      BatchNorm2d-36             [-1, 48, 8, 8]              96
           Conv2d-37              [-1, 9, 1, 1]             441
           Conv2d-38             [-1, 48, 1, 1]             480
    SqueezeExcite-39             [-1, 48, 8, 8]               0
           Conv2d-40             [-1, 12, 8, 8]             576
      BatchNorm2d-41             [-1, 12, 8, 8]              24
   ChannelShuffle-42             [-1, 24, 8, 8]               0
MuxInvertedResidual-43             [-1, 24, 8, 8]               0
           Conv2d-44             [-1, 96, 8, 8]           2,304
      BatchNorm2d-45             [-1, 96, 8, 8]             192
           Conv2d-46             [-1, 32, 4, 4]             288
           Conv2d-47             [-1, 32, 4, 4]             800
           Conv2d-48             [-1, 32, 4, 4]           1,568
      MixedConv2d-49             [-1, 96, 4, 4]               0
      BatchNorm2d-50             [-1, 96, 4, 4]             192
           Conv2d-51             [-1, 18, 1, 1]           1,746
           Conv2d-52             [-1, 96, 1, 1]           1,824
    SqueezeExcite-53             [-1, 96, 4, 4]               0
           Conv2d-54             [-1, 40, 4, 4]           3,840
      BatchNorm2d-55             [-1, 40, 4, 4]              80
 InvertedResidual-56             [-1, 40, 4, 4]               0
       SplitBlock-57  [[-1, 20, 4, 4], [-1, 20, 4, 4]]               0
           Conv2d-58            [-1, 120, 4, 4]           2,400
      BatchNorm2d-59            [-1, 120, 4, 4]             240
           Conv2d-60            [-1, 120, 4, 4]           2,160
      BatchNorm2d-61            [-1, 120, 4, 4]             240
           Conv2d-62             [-1, 15, 1, 1]           1,815
           Conv2d-63            [-1, 120, 1, 1]           1,920
    SqueezeExcite-64            [-1, 120, 4, 4]               0
           Conv2d-65             [-1, 20, 4, 4]           2,400
      BatchNorm2d-66             [-1, 20, 4, 4]              40
   ChannelShuffle-67             [-1, 40, 4, 4]               0
MuxInvertedResidual-68             [-1, 40, 4, 4]               0
       SplitBlock-69  [[-1, 20, 4, 4], [-1, 20, 4, 4]]               0
           Conv2d-70            [-1, 120, 4, 4]           2,400
      BatchNorm2d-71            [-1, 120, 4, 4]             240
           Conv2d-72            [-1, 120, 4, 4]           2,160
      BatchNorm2d-73            [-1, 120, 4, 4]             240
           Conv2d-74             [-1, 15, 1, 1]           1,815
           Conv2d-75            [-1, 120, 1, 1]           1,920
    SqueezeExcite-76            [-1, 120, 4, 4]               0
           Conv2d-77             [-1, 20, 4, 4]           2,400
      BatchNorm2d-78             [-1, 20, 4, 4]              40
   ChannelShuffle-79             [-1, 40, 4, 4]               0
MuxInvertedResidual-80             [-1, 40, 4, 4]               0
           Conv2d-81            [-1, 160, 4, 4]           6,400
      BatchNorm2d-82            [-1, 160, 4, 4]             320
           Conv2d-83             [-1, 40, 2, 2]             360
           Conv2d-84             [-1, 40, 2, 2]           1,000
           Conv2d-85             [-1, 40, 2, 2]           1,960
           Conv2d-86             [-1, 40, 2, 2]           3,240
      MixedConv2d-87            [-1, 160, 2, 2]               0
      BatchNorm2d-88            [-1, 160, 2, 2]             320
           Conv2d-89             [-1, 30, 1, 1]           4,830
           Conv2d-90            [-1, 160, 1, 1]           4,960
    SqueezeExcite-91            [-1, 160, 2, 2]               0
           Conv2d-92             [-1, 80, 2, 2]          12,800
      BatchNorm2d-93             [-1, 80, 2, 2]             160
 InvertedResidual-94             [-1, 80, 2, 2]               0
       SplitBlock-95  [[-1, 40, 2, 2], [-1, 40, 2, 2]]               0
           Conv2d-96            [-1, 240, 2, 2]           9,600
      BatchNorm2d-97            [-1, 240, 2, 2]             480
           Conv2d-98            [-1, 240, 2, 2]          12,000
      BatchNorm2d-99            [-1, 240, 2, 2]             480
          Conv2d-100             [-1, 30, 1, 1]           7,230
          Conv2d-101            [-1, 240, 1, 1]           7,440
   SqueezeExcite-102            [-1, 240, 2, 2]               0
          Conv2d-103             [-1, 40, 2, 2]           9,600
     BatchNorm2d-104             [-1, 40, 2, 2]              80
  ChannelShuffle-105             [-1, 80, 2, 2]               0
MuxInvertedResidual-106             [-1, 80, 2, 2]               0
      SplitBlock-107  [[-1, 40, 2, 2], [-1, 40, 2, 2]]               0
          Conv2d-108            [-1, 240, 2, 2]           9,600
     BatchNorm2d-109            [-1, 240, 2, 2]             480
          Conv2d-110            [-1, 240, 2, 2]          12,000
     BatchNorm2d-111            [-1, 240, 2, 2]             480
          Conv2d-112             [-1, 30, 1, 1]           7,230
          Conv2d-113            [-1, 240, 1, 1]           7,440
   SqueezeExcite-114            [-1, 240, 2, 2]               0
          Conv2d-115             [-1, 40, 2, 2]           9,600
     BatchNorm2d-116             [-1, 40, 2, 2]              80
  ChannelShuffle-117             [-1, 80, 2, 2]               0
MuxInvertedResidual-118             [-1, 80, 2, 2]               0
================================================================
Total params: 183,068
Trainable params: 183,068
Non-trainable params: 0
----------------------------------------------------------------
Input size (MB): 0.01
Forward/backward pass size (MB): 9.27
Params size (MB): 0.70
Estimated Total Size (MB): 9.98
----------------------------------------------------------------
middle
Sequential(
  (10): Sequential(
    (0): InvertedResidual(
      (conv_pw): Conv2d(80, 480, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_dw): Conv2d(480, 480, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=480, bias=False)
      (bn2): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SqueezeExcite(
        (conv_reduce): Conv2d(480, 60, kernel_size=(1, 1), stride=(1, 1))
        (conv_expand): Conv2d(60, 480, kernel_size=(1, 1), stride=(1, 1))
      )
      (conv_pwl): Conv2d(480, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (11): Sequential(
    (0): MuxInvertedResidual(
      (split): SplitBlock(ratio=0.50)
      (conv_pw): Conv2d(56, 336, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(336, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_dw): Conv2d(336, 336, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=168, bias=False)
      (bn2): BatchNorm2d(336, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SqueezeExcite(
        (conv_reduce): Conv2d(336, 42, kernel_size=(1, 1), stride=(1, 1))
        (conv_expand): Conv2d(42, 336, kernel_size=(1, 1), stride=(1, 1))
      )
      (conv_pwl): Conv2d(336, 56, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(56, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shuffle): ChannelShuffle(groups=2)
    )
  )
)
----------------------------------------------------------------
        Layer (type)               Output Shape         Param #
================================================================
            Conv2d-1            [-1, 480, 2, 2]          38,400
       BatchNorm2d-2            [-1, 480, 2, 2]             960
            Conv2d-3            [-1, 480, 2, 2]          12,000
       BatchNorm2d-4            [-1, 480, 2, 2]             960
            Conv2d-5             [-1, 60, 1, 1]          28,860
            Conv2d-6            [-1, 480, 1, 1]          29,280
     SqueezeExcite-7            [-1, 480, 2, 2]               0
            Conv2d-8            [-1, 112, 2, 2]          53,760
       BatchNorm2d-9            [-1, 112, 2, 2]             224
 InvertedResidual-10            [-1, 112, 2, 2]               0
       SplitBlock-11  [[-1, 56, 2, 2], [-1, 56, 2, 2]]               0
           Conv2d-12            [-1, 336, 2, 2]          18,816
      BatchNorm2d-13            [-1, 336, 2, 2]             672
           Conv2d-14            [-1, 336, 2, 2]          16,800
      BatchNorm2d-15            [-1, 336, 2, 2]             672
           Conv2d-16             [-1, 42, 1, 1]          14,154
           Conv2d-17            [-1, 336, 1, 1]          14,448
    SqueezeExcite-18            [-1, 336, 2, 2]               0
           Conv2d-19             [-1, 56, 2, 2]          18,816
      BatchNorm2d-20             [-1, 56, 2, 2]             112
   ChannelShuffle-21            [-1, 112, 2, 2]               0
MuxInvertedResidual-22            [-1, 112, 2, 2]               0
================================================================
Total params: 248,934
Trainable params: 248,934
Non-trainable params: 0
----------------------------------------------------------------
Input size (MB): 0.00
Forward/backward pass size (MB): 0.23
Params size (MB): 0.95
Estimated Total Size (MB): 1.18
----------------------------------------------------------------
back
Sequential(
  (0): Sequential(
    (12): Sequential(
      (0): MuxInvertedResidual(
        (split): SplitBlock(ratio=0.50)
        (conv_pw): Conv2d(56, 336, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(336, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv_dw): Conv2d(336, 336, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=168, bias=False)
        (bn2): BatchNorm2d(336, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (se): SqueezeExcite(
          (conv_reduce): Conv2d(336, 42, kernel_size=(1, 1), stride=(1, 1))
          (conv_expand): Conv2d(42, 336, kernel_size=(1, 1), stride=(1, 1))
        )
        (conv_pwl): Conv2d(336, 56, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(56, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (shuffle): ChannelShuffle(groups=2)
      )
    )
    (13): Sequential(
      (0): InvertedResidual(
        (conv_pw): Conv2d(112, 448, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv_dw): MixedConv2d(
          (0): Conv2d(92, 92, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=92, bias=False)
          (1): Conv2d(89, 89, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=89, bias=False)
          (2): Conv2d(89, 89, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), groups=89, bias=False)
          (3): Conv2d(89, 89, kernel_size=(9, 9), stride=(2, 2), padding=(4, 4), groups=89, bias=False)
          (4): Conv2d(89, 89, kernel_size=(11, 11), stride=(2, 2), padding=(5, 5), groups=89, bias=False)
        )
        (bn2): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (se): SqueezeExcite(
          (conv_reduce): Conv2d(448, 84, kernel_size=(1, 1), stride=(1, 1))
          (conv_expand): Conv2d(84, 448, kernel_size=(1, 1), stride=(1, 1))
        )
        (conv_pwl): Conv2d(448, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (14): Sequential(
      (0): MuxInvertedResidual(
        (split): SplitBlock(ratio=0.50)
        (conv_pw): Conv2d(80, 480, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv_dw): Conv2d(480, 480, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=240, bias=False)
        (bn2): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (se): SqueezeExcite(
          (conv_reduce): Conv2d(480, 60, kernel_size=(1, 1), stride=(1, 1))
          (conv_expand): Conv2d(60, 480, kernel_size=(1, 1), stride=(1, 1))
        )
        (conv_pwl): Conv2d(480, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (shuffle): ChannelShuffle(groups=2)
      )
    )
    (15): Sequential(
      (0): MuxInvertedResidual(
        (split): SplitBlock(ratio=0.50)
        (conv_pw): Conv2d(80, 480, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv_dw): Conv2d(480, 480, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=240, bias=False)
        (bn2): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (se): SqueezeExcite(
          (conv_reduce): Conv2d(480, 60, kernel_size=(1, 1), stride=(1, 1))
          (conv_expand): Conv2d(60, 480, kernel_size=(1, 1), stride=(1, 1))
        )
        (conv_pwl): Conv2d(480, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (shuffle): ChannelShuffle(groups=2)
      )
    )
    (16): Sequential(
      (0): MuxInvertedResidual(
        (split): SplitBlock(ratio=0.50)
        (conv_pw): Conv2d(80, 480, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv_dw): Conv2d(480, 480, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=240, bias=False)
        (bn2): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (se): SqueezeExcite(
          (conv_reduce): Conv2d(480, 60, kernel_size=(1, 1), stride=(1, 1))
          (conv_expand): Conv2d(60, 480, kernel_size=(1, 1), stride=(1, 1))
        )
        (conv_pwl): Conv2d(480, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (shuffle): ChannelShuffle(groups=2)
      )
    )
    (17): Sequential(
      (0): InvertedResidual(
        (conv_pw): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv_dw): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
        (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (se): SqueezeExcite(
          (conv_reduce): Conv2d(960, 120, kernel_size=(1, 1), stride=(1, 1))
          (conv_expand): Conv2d(120, 960, kernel_size=(1, 1), stride=(1, 1))
        )
        (conv_pwl): Conv2d(960, 200, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(200, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (1): Sequential(
    (conv_head): Conv2d(200, 1280, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn2): BatchNorm2d(1280, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (global_pool): SelectAdaptivePool2d (pool_type=avg, flatten=False)
  )
  (2): Flatten()
  (3): Sequential(
    (classifier): Linear(in_features=1280, out_features=10, bias=True)
  )
)
----------------------------------------------------------------
        Layer (type)               Output Shape         Param #
================================================================
        SplitBlock-1  [[-1, 56, 2, 2], [-1, 56, 2, 2]]               0
            Conv2d-2            [-1, 336, 2, 2]          18,816
       BatchNorm2d-3            [-1, 336, 2, 2]             672
            Conv2d-4            [-1, 336, 2, 2]          16,800
       BatchNorm2d-5            [-1, 336, 2, 2]             672
            Conv2d-6             [-1, 42, 1, 1]          14,154
            Conv2d-7            [-1, 336, 1, 1]          14,448
     SqueezeExcite-8            [-1, 336, 2, 2]               0
            Conv2d-9             [-1, 56, 2, 2]          18,816
      BatchNorm2d-10             [-1, 56, 2, 2]             112
   ChannelShuffle-11            [-1, 112, 2, 2]               0
MuxInvertedResidual-12            [-1, 112, 2, 2]               0
           Conv2d-13            [-1, 448, 2, 2]          50,176
      BatchNorm2d-14            [-1, 448, 2, 2]             896
           Conv2d-15             [-1, 92, 1, 1]             828
           Conv2d-16             [-1, 89, 1, 1]           2,225
           Conv2d-17             [-1, 89, 1, 1]           4,361
           Conv2d-18             [-1, 89, 1, 1]           7,209
           Conv2d-19             [-1, 89, 1, 1]          10,769
      MixedConv2d-20            [-1, 448, 1, 1]               0
      BatchNorm2d-21            [-1, 448, 1, 1]             896
           Conv2d-22             [-1, 84, 1, 1]          37,716
           Conv2d-23            [-1, 448, 1, 1]          38,080
    SqueezeExcite-24            [-1, 448, 1, 1]               0
           Conv2d-25            [-1, 160, 1, 1]          71,680
      BatchNorm2d-26            [-1, 160, 1, 1]             320
 InvertedResidual-27            [-1, 160, 1, 1]               0
       SplitBlock-28  [[-1, 80, 1, 1], [-1, 80, 1, 1]]               0
           Conv2d-29            [-1, 480, 1, 1]          38,400
      BatchNorm2d-30            [-1, 480, 1, 1]             960
           Conv2d-31            [-1, 480, 1, 1]          24,000
      BatchNorm2d-32            [-1, 480, 1, 1]             960
           Conv2d-33             [-1, 60, 1, 1]          28,860
           Conv2d-34            [-1, 480, 1, 1]          29,280
    SqueezeExcite-35            [-1, 480, 1, 1]               0
           Conv2d-36             [-1, 80, 1, 1]          38,400
      BatchNorm2d-37             [-1, 80, 1, 1]             160
   ChannelShuffle-38            [-1, 160, 1, 1]               0
MuxInvertedResidual-39            [-1, 160, 1, 1]               0
       SplitBlock-40  [[-1, 80, 1, 1], [-1, 80, 1, 1]]               0
           Conv2d-41            [-1, 480, 1, 1]          38,400
      BatchNorm2d-42            [-1, 480, 1, 1]             960
           Conv2d-43            [-1, 480, 1, 1]          24,000
      BatchNorm2d-44            [-1, 480, 1, 1]             960
           Conv2d-45             [-1, 60, 1, 1]          28,860
           Conv2d-46            [-1, 480, 1, 1]          29,280
    SqueezeExcite-47            [-1, 480, 1, 1]               0
           Conv2d-48             [-1, 80, 1, 1]          38,400
      BatchNorm2d-49             [-1, 80, 1, 1]             160
   ChannelShuffle-50            [-1, 160, 1, 1]               0
MuxInvertedResidual-51            [-1, 160, 1, 1]               0
       SplitBlock-52  [[-1, 80, 1, 1], [-1, 80, 1, 1]]               0
           Conv2d-53            [-1, 480, 1, 1]          38,400
      BatchNorm2d-54            [-1, 480, 1, 1]             960
           Conv2d-55            [-1, 480, 1, 1]          24,000
      BatchNorm2d-56            [-1, 480, 1, 1]             960
           Conv2d-57             [-1, 60, 1, 1]          28,860
           Conv2d-58            [-1, 480, 1, 1]          29,280
    SqueezeExcite-59            [-1, 480, 1, 1]               0
           Conv2d-60             [-1, 80, 1, 1]          38,400
      BatchNorm2d-61             [-1, 80, 1, 1]             160
   ChannelShuffle-62            [-1, 160, 1, 1]               0
MuxInvertedResidual-63            [-1, 160, 1, 1]               0
           Conv2d-64            [-1, 960, 1, 1]         153,600
      BatchNorm2d-65            [-1, 960, 1, 1]           1,920
           Conv2d-66            [-1, 960, 1, 1]           8,640
      BatchNorm2d-67            [-1, 960, 1, 1]           1,920
           Conv2d-68            [-1, 120, 1, 1]         115,320
           Conv2d-69            [-1, 960, 1, 1]         116,160
    SqueezeExcite-70            [-1, 960, 1, 1]               0
           Conv2d-71            [-1, 200, 1, 1]         192,000
      BatchNorm2d-72            [-1, 200, 1, 1]             400
 InvertedResidual-73            [-1, 200, 1, 1]               0
           Conv2d-74           [-1, 1280, 1, 1]         256,000
      BatchNorm2d-75           [-1, 1280, 1, 1]           2,560
AdaptiveAvgPool2d-76           [-1, 1280, 1, 1]               0
SelectAdaptivePool2d-77           [-1, 1280, 1, 1]               0
          Flatten-78                 [-1, 1280]               0
           Linear-79                   [-1, 10]          12,810
================================================================
Total params: 1,654,036
Trainable params: 1,654,036
Non-trainable params: 0
----------------------------------------------------------------
Input size (MB): 0.00
Forward/backward pass size (MB): 0.24
Params size (MB): 6.31
Estimated Total Size (MB): 6.55
----------------------------------------------------------------
adaptive teacher
----------------------------------------------------------------
        Layer (type)               Output Shape         Param #
================================================================
            Conv2d-1           [-1, 24, 16, 16]             648
            Conv2d-2           [-1, 24, 16, 16]             216
       BatchNorm2d-3           [-1, 24, 16, 16]              48
            Conv2d-4              [-1, 6, 1, 1]             150
            Conv2d-5             [-1, 24, 1, 1]             168
     SqueezeExcite-6           [-1, 24, 16, 16]               0
            Conv2d-7           [-1, 24, 16, 16]             576
       BatchNorm2d-8           [-1, 24, 16, 16]              48
DepthwiseSeparableConv-9           [-1, 24, 16, 16]               0
           Conv2d-10           [-1, 96, 16, 16]           2,304
      BatchNorm2d-11           [-1, 96, 16, 16]             192
           Conv2d-12             [-1, 96, 8, 8]             864
      BatchNorm2d-13             [-1, 96, 8, 8]             192
           Conv2d-14             [-1, 18, 1, 1]           1,746
           Conv2d-15             [-1, 96, 1, 1]           1,824
    SqueezeExcite-16             [-1, 96, 8, 8]               0
           Conv2d-17             [-1, 24, 8, 8]           2,304
      BatchNorm2d-18             [-1, 24, 8, 8]              48
 InvertedResidual-19             [-1, 24, 8, 8]               0
       SplitBlock-20  [[-1, 12, 8, 8], [-1, 12, 8, 8]]               0
           Conv2d-21             [-1, 48, 8, 8]             576
      BatchNorm2d-22             [-1, 48, 8, 8]              96
           Conv2d-23             [-1, 48, 8, 8]             864
      BatchNorm2d-24             [-1, 48, 8, 8]              96
           Conv2d-25              [-1, 9, 1, 1]             441
           Conv2d-26             [-1, 48, 1, 1]             480
    SqueezeExcite-27             [-1, 48, 8, 8]               0
           Conv2d-28             [-1, 12, 8, 8]             576
      BatchNorm2d-29             [-1, 12, 8, 8]              24
   ChannelShuffle-30             [-1, 24, 8, 8]               0
MuxInvertedResidual-31             [-1, 24, 8, 8]               0
       SplitBlock-32  [[-1, 12, 8, 8], [-1, 12, 8, 8]]               0
           Conv2d-33             [-1, 48, 8, 8]             576
      BatchNorm2d-34             [-1, 48, 8, 8]              96
           Conv2d-35             [-1, 48, 8, 8]             864
      BatchNorm2d-36             [-1, 48, 8, 8]              96
           Conv2d-37              [-1, 9, 1, 1]             441
           Conv2d-38             [-1, 48, 1, 1]             480
    SqueezeExcite-39             [-1, 48, 8, 8]               0
           Conv2d-40             [-1, 12, 8, 8]             576
      BatchNorm2d-41             [-1, 12, 8, 8]              24
   ChannelShuffle-42             [-1, 24, 8, 8]               0
MuxInvertedResidual-43             [-1, 24, 8, 8]               0
           Conv2d-44             [-1, 96, 8, 8]           2,304
      BatchNorm2d-45             [-1, 96, 8, 8]             192
           Conv2d-46             [-1, 32, 4, 4]             288
           Conv2d-47             [-1, 32, 4, 4]             800
           Conv2d-48             [-1, 32, 4, 4]           1,568
      MixedConv2d-49             [-1, 96, 4, 4]               0
      BatchNorm2d-50             [-1, 96, 4, 4]             192
           Conv2d-51             [-1, 18, 1, 1]           1,746
           Conv2d-52             [-1, 96, 1, 1]           1,824
    SqueezeExcite-53             [-1, 96, 4, 4]               0
           Conv2d-54             [-1, 40, 4, 4]           3,840
      BatchNorm2d-55             [-1, 40, 4, 4]              80
 InvertedResidual-56             [-1, 40, 4, 4]               0
       SplitBlock-57  [[-1, 20, 4, 4], [-1, 20, 4, 4]]               0
           Conv2d-58            [-1, 120, 4, 4]           2,400
      BatchNorm2d-59            [-1, 120, 4, 4]             240
           Conv2d-60            [-1, 120, 4, 4]           2,160
      BatchNorm2d-61            [-1, 120, 4, 4]             240
           Conv2d-62             [-1, 15, 1, 1]           1,815
           Conv2d-63            [-1, 120, 1, 1]           1,920
    SqueezeExcite-64            [-1, 120, 4, 4]               0
           Conv2d-65             [-1, 20, 4, 4]           2,400
      BatchNorm2d-66             [-1, 20, 4, 4]              40
   ChannelShuffle-67             [-1, 40, 4, 4]               0
MuxInvertedResidual-68             [-1, 40, 4, 4]               0
       SplitBlock-69  [[-1, 20, 4, 4], [-1, 20, 4, 4]]               0
           Conv2d-70            [-1, 120, 4, 4]           2,400
      BatchNorm2d-71            [-1, 120, 4, 4]             240
           Conv2d-72            [-1, 120, 4, 4]           2,160
      BatchNorm2d-73            [-1, 120, 4, 4]             240
           Conv2d-74             [-1, 15, 1, 1]           1,815
           Conv2d-75            [-1, 120, 1, 1]           1,920
    SqueezeExcite-76            [-1, 120, 4, 4]               0
           Conv2d-77             [-1, 20, 4, 4]           2,400
      BatchNorm2d-78             [-1, 20, 4, 4]              40
   ChannelShuffle-79             [-1, 40, 4, 4]               0
MuxInvertedResidual-80             [-1, 40, 4, 4]               0
           Conv2d-81            [-1, 160, 4, 4]           6,400
      BatchNorm2d-82            [-1, 160, 4, 4]             320
           Conv2d-83             [-1, 40, 2, 2]             360
           Conv2d-84             [-1, 40, 2, 2]           1,000
           Conv2d-85             [-1, 40, 2, 2]           1,960
           Conv2d-86             [-1, 40, 2, 2]           3,240
      MixedConv2d-87            [-1, 160, 2, 2]               0
      BatchNorm2d-88            [-1, 160, 2, 2]             320
           Conv2d-89             [-1, 30, 1, 1]           4,830
           Conv2d-90            [-1, 160, 1, 1]           4,960
    SqueezeExcite-91            [-1, 160, 2, 2]               0
           Conv2d-92             [-1, 80, 2, 2]          12,800
      BatchNorm2d-93             [-1, 80, 2, 2]             160
 InvertedResidual-94             [-1, 80, 2, 2]               0
       SplitBlock-95  [[-1, 40, 2, 2], [-1, 40, 2, 2]]               0
           Conv2d-96            [-1, 240, 2, 2]           9,600
      BatchNorm2d-97            [-1, 240, 2, 2]             480
           Conv2d-98            [-1, 240, 2, 2]          12,000
      BatchNorm2d-99            [-1, 240, 2, 2]             480
          Conv2d-100             [-1, 30, 1, 1]           7,230
          Conv2d-101            [-1, 240, 1, 1]           7,440
   SqueezeExcite-102            [-1, 240, 2, 2]               0
          Conv2d-103             [-1, 40, 2, 2]           9,600
     BatchNorm2d-104             [-1, 40, 2, 2]              80
  ChannelShuffle-105             [-1, 80, 2, 2]               0
MuxInvertedResidual-106             [-1, 80, 2, 2]               0
      SplitBlock-107  [[-1, 40, 2, 2], [-1, 40, 2, 2]]               0
          Conv2d-108            [-1, 240, 2, 2]           9,600
     BatchNorm2d-109            [-1, 240, 2, 2]             480
          Conv2d-110            [-1, 240, 2, 2]          12,000
     BatchNorm2d-111            [-1, 240, 2, 2]             480
          Conv2d-112             [-1, 30, 1, 1]           7,230
          Conv2d-113            [-1, 240, 1, 1]           7,440
   SqueezeExcite-114            [-1, 240, 2, 2]               0
          Conv2d-115             [-1, 40, 2, 2]           9,600
     BatchNorm2d-116             [-1, 40, 2, 2]              80
  ChannelShuffle-117             [-1, 80, 2, 2]               0
MuxInvertedResidual-118             [-1, 80, 2, 2]               0
          Conv2d-119             [-1, 64, 2, 2]         128,064
     BatchNorm2d-120             [-1, 64, 2, 2]             128
            ReLU-121             [-1, 64, 2, 2]               0
TransitionModule-122             [-1, 64, 2, 2]               0
          Conv2d-123             [-1, 64, 2, 2]          36,864
     BatchNorm2d-124             [-1, 64, 2, 2]             128
            ReLU-125             [-1, 64, 2, 2]               0
          Conv2d-126             [-1, 64, 2, 2]          36,864
     BatchNorm2d-127             [-1, 64, 2, 2]             128
            ReLU-128             [-1, 64, 2, 2]               0
      BasicBlock-129             [-1, 64, 2, 2]               0
ActivationMapAdaptiveModule-130             [-1, 64, 2, 2]               0
          Conv2d-131            [-1, 112, 2, 2]         179,312
     BatchNorm2d-132            [-1, 112, 2, 2]             224
            ReLU-133            [-1, 112, 2, 2]               0
TransitionModule-134            [-1, 112, 2, 2]               0
          Conv2d-135            [-1, 112, 2, 2]         112,896
     BatchNorm2d-136            [-1, 112, 2, 2]             224
            ReLU-137            [-1, 112, 2, 2]               0
          Conv2d-138            [-1, 112, 2, 2]         112,896
     BatchNorm2d-139            [-1, 112, 2, 2]             224
            ReLU-140            [-1, 112, 2, 2]               0
      BasicBlock-141            [-1, 112, 2, 2]               0
ActivationMapAdaptiveModule-142            [-1, 112, 2, 2]               0
      SplitBlock-143  [[-1, 56, 2, 2], [-1, 56, 2, 2]]               0
          Conv2d-144            [-1, 336, 2, 2]          18,816
     BatchNorm2d-145            [-1, 336, 2, 2]             672
          Conv2d-146            [-1, 336, 2, 2]          16,800
     BatchNorm2d-147            [-1, 336, 2, 2]             672
          Conv2d-148             [-1, 42, 1, 1]          14,154
          Conv2d-149            [-1, 336, 1, 1]          14,448
   SqueezeExcite-150            [-1, 336, 2, 2]               0
          Conv2d-151             [-1, 56, 2, 2]          18,816
     BatchNorm2d-152             [-1, 56, 2, 2]             112
  ChannelShuffle-153            [-1, 112, 2, 2]               0
MuxInvertedResidual-154            [-1, 112, 2, 2]               0
          Conv2d-155            [-1, 448, 2, 2]          50,176
     BatchNorm2d-156            [-1, 448, 2, 2]             896
          Conv2d-157             [-1, 92, 1, 1]             828
          Conv2d-158             [-1, 89, 1, 1]           2,225
          Conv2d-159             [-1, 89, 1, 1]           4,361
          Conv2d-160             [-1, 89, 1, 1]           7,209
          Conv2d-161             [-1, 89, 1, 1]          10,769
     MixedConv2d-162            [-1, 448, 1, 1]               0
     BatchNorm2d-163            [-1, 448, 1, 1]             896
          Conv2d-164             [-1, 84, 1, 1]          37,716
          Conv2d-165            [-1, 448, 1, 1]          38,080
   SqueezeExcite-166            [-1, 448, 1, 1]               0
          Conv2d-167            [-1, 160, 1, 1]          71,680
     BatchNorm2d-168            [-1, 160, 1, 1]             320
InvertedResidual-169            [-1, 160, 1, 1]               0
      SplitBlock-170  [[-1, 80, 1, 1], [-1, 80, 1, 1]]               0
          Conv2d-171            [-1, 480, 1, 1]          38,400
     BatchNorm2d-172            [-1, 480, 1, 1]             960
          Conv2d-173            [-1, 480, 1, 1]          24,000
     BatchNorm2d-174            [-1, 480, 1, 1]             960
          Conv2d-175             [-1, 60, 1, 1]          28,860
          Conv2d-176            [-1, 480, 1, 1]          29,280
   SqueezeExcite-177            [-1, 480, 1, 1]               0
          Conv2d-178             [-1, 80, 1, 1]          38,400
     BatchNorm2d-179             [-1, 80, 1, 1]             160
  ChannelShuffle-180            [-1, 160, 1, 1]               0
MuxInvertedResidual-181            [-1, 160, 1, 1]               0
      SplitBlock-182  [[-1, 80, 1, 1], [-1, 80, 1, 1]]               0
          Conv2d-183            [-1, 480, 1, 1]          38,400
     BatchNorm2d-184            [-1, 480, 1, 1]             960
          Conv2d-185            [-1, 480, 1, 1]          24,000
     BatchNorm2d-186            [-1, 480, 1, 1]             960
          Conv2d-187             [-1, 60, 1, 1]          28,860
          Conv2d-188            [-1, 480, 1, 1]          29,280
   SqueezeExcite-189            [-1, 480, 1, 1]               0
          Conv2d-190             [-1, 80, 1, 1]          38,400
     BatchNorm2d-191             [-1, 80, 1, 1]             160
  ChannelShuffle-192            [-1, 160, 1, 1]               0
MuxInvertedResidual-193            [-1, 160, 1, 1]               0
      SplitBlock-194  [[-1, 80, 1, 1], [-1, 80, 1, 1]]               0
          Conv2d-195            [-1, 480, 1, 1]          38,400
     BatchNorm2d-196            [-1, 480, 1, 1]             960
          Conv2d-197            [-1, 480, 1, 1]          24,000
     BatchNorm2d-198            [-1, 480, 1, 1]             960
          Conv2d-199             [-1, 60, 1, 1]          28,860
          Conv2d-200            [-1, 480, 1, 1]          29,280
   SqueezeExcite-201            [-1, 480, 1, 1]               0
          Conv2d-202             [-1, 80, 1, 1]          38,400
     BatchNorm2d-203             [-1, 80, 1, 1]             160
  ChannelShuffle-204            [-1, 160, 1, 1]               0
MuxInvertedResidual-205            [-1, 160, 1, 1]               0
          Conv2d-206            [-1, 960, 1, 1]         153,600
     BatchNorm2d-207            [-1, 960, 1, 1]           1,920
          Conv2d-208            [-1, 960, 1, 1]           8,640
     BatchNorm2d-209            [-1, 960, 1, 1]           1,920
          Conv2d-210            [-1, 120, 1, 1]         115,320
          Conv2d-211            [-1, 960, 1, 1]         116,160
   SqueezeExcite-212            [-1, 960, 1, 1]               0
          Conv2d-213            [-1, 200, 1, 1]         192,000
     BatchNorm2d-214            [-1, 200, 1, 1]             400
InvertedResidual-215            [-1, 200, 1, 1]               0
          Conv2d-216           [-1, 1280, 1, 1]         256,000
     BatchNorm2d-217           [-1, 1280, 1, 1]           2,560
AdaptiveAvgPool2d-218           [-1, 1280, 1, 1]               0
SelectAdaptivePool2d-219           [-1, 1280, 1, 1]               0
         Flatten-220                 [-1, 1280]               0
          Linear-221                   [-1, 10]          12,810
================================================================
Total params: 2,445,056
Trainable params: 2,445,056
Non-trainable params: 0
----------------------------------------------------------------
Input size (MB): 0.01
Forward/backward pass size (MB): 9.45
Params size (MB): 9.33
Estimated Total Size (MB): 18.79
----------------------------------------------------------------